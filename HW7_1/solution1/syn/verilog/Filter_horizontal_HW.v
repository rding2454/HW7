// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter_horizontal_HW (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_r_address0,
        Input_r_ce0,
        Input_r_q0,
        Input_r_address1,
        Input_r_ce1,
        Input_r_q1,
        Output_r_address0,
        Output_r_ce0,
        Output_r_we0,
        Output_r_d0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state13 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [22:0] Input_r_address0;
output   Input_r_ce0;
input  [7:0] Input_r_q0;
output  [22:0] Input_r_address1;
output   Input_r_ce1;
input  [7:0] Input_r_q1;
output  [18:0] Output_r_address0;
output   Output_r_ce0;
output   Output_r_we0;
output  [7:0] Output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[22:0] Input_r_address0;
reg Input_r_ce0;
reg[22:0] Input_r_address1;
reg Input_r_ce1;
reg Output_r_ce0;
reg Output_r_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [16:0] indvar_flatten_reg_295;
reg   [8:0] Y_reg_306;
reg   [8:0] X_reg_317;
reg   [7:0] reg_342;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1055;
reg   [0:0] tmp_8_reg_1100;
reg   [7:0] ap_reg_pp0_iter2_reg_342;
reg   [7:0] reg_347;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_1055;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] ap_reg_pp0_iter1_tmp_8_reg_1100;
wire   [7:0] buffer_q0;
reg   [7:0] reg_354;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [7:0] buffer_q1;
reg   [7:0] reg_359;
wire   [0:0] exitcond_flatten_fu_394_p2;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_1055;
wire   [16:0] indvar_flatten_next_fu_400_p2;
reg   [16:0] indvar_flatten_next_reg_1059;
reg    ap_enable_reg_pp0_iter0;
wire   [8:0] X_mid2_fu_412_p3;
reg   [8:0] X_mid2_reg_1064;
reg   [8:0] ap_reg_pp0_iter1_X_mid2_reg_1064;
wire   [8:0] tmp_mid2_v_v_fu_426_p3;
reg   [8:0] tmp_mid2_v_v_reg_1078;
reg   [8:0] ap_reg_pp0_iter1_tmp_mid2_v_v_reg_1078;
wire   [18:0] tmp_cast_mid2_v_fu_464_p3;
reg   [18:0] tmp_cast_mid2_v_reg_1084;
wire   [18:0] tmp_7_cast22_cast_mi_fu_472_p2;
reg   [18:0] tmp_7_cast22_cast_mi_reg_1095;
wire   [0:0] tmp_8_fu_504_p2;
reg   [0:0] ap_reg_pp0_iter2_tmp_8_reg_1100;
wire   [8:0] grp_fu_337_p2;
reg   [8:0] X_1_reg_1139;
reg   [7:0] Input_load_9_reg_1159;
wire  signed [15:0] grp_fu_1004_p3;
reg  signed [15:0] tmp9_reg_1166;
reg   [7:0] Input_load_10_reg_1181;
reg   [7:0] Input_load_13_reg_1188;
wire   [16:0] tmp_mid2_fu_632_p2;
reg   [16:0] tmp_mid2_reg_1195;
wire  signed [15:0] grp_fu_1012_p3;
reg  signed [15:0] tmp4_reg_1210;
wire   [12:0] tmp_21_5_fu_778_p2;
reg   [12:0] tmp_21_5_reg_1215;
wire   [15:0] tmp6_fu_790_p2;
reg   [15:0] tmp6_reg_1220;
wire   [12:0] tmp_24_1_fu_825_p2;
reg   [12:0] tmp_24_1_reg_1225;
wire   [14:0] tmp_24_2_fu_855_p2;
reg   [14:0] tmp_24_2_reg_1230;
wire   [12:0] tmp_24_5_fu_877_p2;
reg   [12:0] tmp_24_5_reg_1235;
wire   [15:0] Sum_5_6_fu_913_p2;
reg   [15:0] Sum_5_6_reg_1240;
wire   [16:0] sum5_fu_918_p2;
reg   [16:0] sum5_reg_1245;
wire   [15:0] Sum_6_6_fu_983_p2;
reg   [15:0] Sum_6_6_reg_1250;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [8:0] buffer_address0;
reg    buffer_ce0;
reg    buffer_we0;
reg   [7:0] buffer_d0;
reg   [8:0] buffer_address1;
reg    buffer_ce1;
reg    buffer_we1;
reg   [7:0] buffer_d1;
reg   [16:0] indvar_flatten_phi_fu_299_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] Y_phi_fu_310_p4;
reg   [8:0] X_phi_fu_321_p4;
wire   [15:0] ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_328;
reg   [15:0] ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328;
reg   [15:0] Sum_2_phi_fu_331_p4;
wire    ap_block_pp0_stage2;
wire  signed [31:0] sum2_cast_fu_515_p1;
wire    ap_block_pp0_stage1;
wire  signed [31:0] sum_2_cast_mid2_fu_486_p1;
wire  signed [31:0] sum_3_cast_mid2_fu_496_p1;
wire  signed [31:0] tmp_cast_mid2_fu_520_p1;
wire   [31:0] sum_cast_mid2_fu_533_p1;
wire  signed [31:0] sum_1_cast_mid2_fu_543_p1;
wire    ap_block_pp0_stage3;
wire  signed [31:0] sum_4_cast_mid2_fu_553_p1;
wire  signed [31:0] tmp_7_cast_mid2_fu_558_p1;
wire   [31:0] tmp_22_3_cast_fu_567_p1;
wire   [31:0] tmp_22_4_cast_fu_577_p1;
wire   [31:0] X_cast5_fu_620_p1;
wire   [31:0] tmp_22_1_cast_fu_624_p1;
wire   [31:0] tmp_22_2_cast_fu_643_p1;
wire   [31:0] tmp_22_5_cast_fu_691_p1;
wire   [31:0] tmp_9_cast_fu_804_p1;
wire   [31:0] sum5_cast_fu_1000_p1;
reg   [8:0] grp_fu_337_p0;
wire   [17:0] p_shl_fu_364_p3;
wire   [13:0] p_shl8_fu_376_p3;
wire   [18:0] p_shl_cast_fu_372_p1;
wire   [18:0] p_shl8_cast_fu_384_p1;
wire   [0:0] exitcond_fu_406_p2;
wire   [8:0] Y_s_fu_420_p2;
wire   [17:0] p_shl_mid1_fu_434_p3;
wire   [13:0] p_shl8_mid1_fu_446_p3;
wire   [18:0] p_shl_cast_mid1_fu_442_p1;
wire   [18:0] p_shl8_cast_mid1_fu_454_p1;
wire   [18:0] tmp_mid1_fu_458_p2;
wire   [18:0] tmp_s_fu_388_p2;
wire   [18:0] sum_2_cast_mid2_v_fu_481_p2;
wire   [18:0] sum_3_cast_mid2_v_fu_491_p2;
wire   [19:0] X_cast20_cast_fu_501_p1;
wire  signed [19:0] tmp_7_cast22_cast_mi_1_fu_477_p1;
wire   [19:0] sum2_fu_509_p2;
wire  signed [23:0] sum_cast_mid2_v_v_fu_524_p1;
wire   [23:0] sum_cast_mid2_v_fu_527_p2;
wire   [18:0] sum_1_cast_mid2_v_fu_538_p2;
wire   [18:0] sum_4_cast_mid2_v_fu_548_p2;
wire   [8:0] tmp_22_3_fu_562_p2;
wire   [8:0] tmp_22_4_fu_572_p2;
wire   [13:0] p_shl15_fu_586_p3;
wire   [8:0] p_shl16_fu_598_p3;
wire   [14:0] p_shl15_cast_fu_594_p1;
wire   [14:0] p_shl16_cast_fu_606_p1;
wire  signed [14:0] tmp_21_4_fu_610_p2;
wire   [8:0] tmp_mid2_fu_632_p0;
wire   [8:0] tmp_22_2_fu_638_p2;
wire   [13:0] p_shl21_fu_652_p3;
wire   [8:0] p_shl22_fu_664_p3;
wire   [14:0] p_shl21_cast_fu_660_p1;
wire   [14:0] p_shl22_cast_fu_672_p1;
wire  signed [14:0] tmp_24_4_fu_676_p2;
wire   [8:0] tmp_22_5_fu_686_p2;
wire   [8:0] tmp_2_fu_696_p3;
wire   [11:0] p_shl12_fu_711_p3;
wire   [12:0] p_shl12_cast_fu_718_p1;
wire   [12:0] tmp_20_1_cast1_fu_708_p1;
wire   [12:0] tmp_21_1_fu_722_p2;
wire   [13:0] p_shl13_fu_732_p3;
wire   [8:0] p_shl14_fu_743_p3;
wire   [14:0] p_shl13_cast_fu_739_p1;
wire   [14:0] p_shl14_cast_fu_750_p1;
wire   [14:0] tmp_21_2_fu_754_p2;
wire   [11:0] p_shl17_fu_767_p3;
wire   [12:0] p_shl17_cast_fu_774_p1;
wire   [12:0] tmp_20_5_cast1_fu_764_p1;
wire  signed [15:0] tmp_21_2_cast_fu_760_p1;
wire  signed [15:0] tmp_21_1_cast_fu_728_p1;
wire   [15:0] tmp_13_cast_fu_704_p1;
wire   [15:0] tmp7_fu_784_p2;
wire   [8:0] tmp_9_fu_799_p2;
wire   [11:0] p_shl18_fu_813_p3;
wire   [12:0] p_shl18_cast_fu_821_p1;
wire   [12:0] tmp_23_1_cast1_fu_809_p1;
wire   [13:0] p_shl19_fu_831_p3;
wire   [8:0] p_shl20_fu_843_p3;
wire   [14:0] p_shl19_cast_fu_839_p1;
wire   [14:0] p_shl20_cast_fu_851_p1;
wire   [11:0] p_shl23_fu_865_p3;
wire   [12:0] p_shl23_cast_fu_873_p1;
wire   [12:0] tmp_23_5_cast1_fu_861_p1;
wire   [8:0] tmp_21_6_fu_886_p3;
wire   [13:0] tmp_21_6_cast_fu_894_p1;
wire  signed [13:0] tmp_21_5_cast_fu_883_p1;
wire   [13:0] tmp10_fu_898_p2;
wire  signed [15:0] tmp10_cast_fu_904_p1;
(* use_dsp48 = "no" *) wire   [15:0] tmp8_fu_908_p2;
wire   [16:0] X_cast_fu_796_p1;
wire   [8:0] tmp_3_fu_923_p3;
wire   [8:0] tmp_24_6_fu_944_p3;
wire  signed [15:0] tmp_24_2_cast_fu_938_p1;
wire  signed [15:0] tmp_24_1_cast_fu_935_p1;
wire   [15:0] tmp_15_cast_fu_931_p1;
wire   [15:0] tmp2_fu_956_p2;
wire   [13:0] tmp_24_6_cast_fu_952_p1;
wire  signed [13:0] tmp_24_5_cast_fu_941_p1;
wire   [13:0] tmp5_fu_968_p2;
wire  signed [15:0] tmp5_cast_fu_974_p1;
wire   [15:0] tmp1_fu_962_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp3_fu_978_p2;
wire   [7:0] grp_fu_1004_p0;
wire   [7:0] grp_fu_1004_p1;
wire   [7:0] grp_fu_1012_p0;
wire   [7:0] grp_fu_1012_p1;
wire    ap_CS_fsm_state13;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_1004_p00;
wire   [15:0] grp_fu_1012_p00;
wire   [16:0] tmp_mid2_fu_632_p00;
reg    ap_condition_912;
reg    ap_condition_917;
reg    ap_condition_921;
reg    ap_condition_926;
reg    ap_condition_930;
reg    ap_condition_934;
reg    ap_condition_939;
reg    ap_condition_944;
reg    ap_condition_949;
reg    ap_condition_953;
reg    ap_condition_957;
reg    ap_condition_961;
reg    ap_condition_965;
reg    ap_condition_969;
reg    ap_condition_972;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Filter_horizontalbkb #(
    .DataWidth( 8 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .we0(buffer_we0),
    .d0(buffer_d0),
    .q0(buffer_q0),
    .address1(buffer_address1),
    .ce1(buffer_ce1),
    .we1(buffer_we1),
    .d1(buffer_d1),
    .q1(buffer_q1)
);

Filter_HW_mac_mulcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
Filter_HW_mac_mulcud_U0(
    .din0(grp_fu_1004_p0),
    .din1(grp_fu_1004_p1),
    .din2(tmp_21_4_fu_610_p2),
    .dout(grp_fu_1004_p3)
);

Filter_HW_mac_mulcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
Filter_HW_mac_mulcud_U1(
    .din0(grp_fu_1012_p0),
    .din1(grp_fu_1012_p1),
    .din2(tmp_24_4_fu_676_p2),
    .dout(grp_fu_1012_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_subdone == 1'b0))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond_flatten_reg_1055 == 1'd0))) begin
        X_reg_317 <= X_1_reg_1139;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        X_reg_317 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond_flatten_reg_1055 == 1'd0))) begin
        Y_reg_306 <= tmp_mid2_v_v_reg_1078;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        Y_reg_306 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_1055) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328 <= Sum_5_6_reg_1240;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328 <= ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_328;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond_flatten_reg_1055 == 1'd0))) begin
        indvar_flatten_reg_295 <= indvar_flatten_next_reg_1059;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_295 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100))) begin
        reg_347 <= Input_r_q0;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond_flatten_reg_1055 == 1'd0) & (tmp_8_reg_1100 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)))) begin
        reg_347 <= Input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_972 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
            reg_354 <= buffer_q1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
            reg_354 <= buffer_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_972 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
            reg_359 <= buffer_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
            reg_359 <= buffer_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        Input_load_10_reg_1181 <= Input_r_q1;
        Input_load_13_reg_1188 <= Input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055))) begin
        Input_load_9_reg_1159 <= Input_r_q0;
        tmp9_reg_1166 <= grp_fu_1004_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100))) begin
        Sum_5_6_reg_1240 <= Sum_5_6_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_1055))) begin
        Sum_6_6_reg_1250 <= Sum_6_6_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1055 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        X_1_reg_1139 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_fu_394_p2))) begin
        X_mid2_reg_1064 <= X_mid2_fu_412_p3;
        tmp_cast_mid2_v_reg_1084[18 : 5] <= tmp_cast_mid2_v_fu_464_p3[18 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_X_mid2_reg_1064 <= X_mid2_reg_1064;
        ap_reg_pp0_iter1_exitcond_flatten_reg_1055 <= exitcond_flatten_reg_1055;
        ap_reg_pp0_iter1_tmp_mid2_v_v_reg_1078 <= tmp_mid2_v_v_reg_1078;
        ap_reg_pp0_iter2_exitcond_flatten_reg_1055 <= ap_reg_pp0_iter1_exitcond_flatten_reg_1055;
        ap_reg_pp0_iter2_reg_342 <= reg_342;
        exitcond_flatten_reg_1055 <= exitcond_flatten_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_8_reg_1100 <= tmp_8_reg_1100;
        ap_reg_pp0_iter2_tmp_8_reg_1100 <= ap_reg_pp0_iter1_tmp_8_reg_1100;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next_reg_1059 <= indvar_flatten_next_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond_flatten_reg_1055 == 1'd0) & (1'd0 == tmp_8_reg_1100)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (exitcond_flatten_reg_1055 == 1'd0) & (tmp_8_reg_1100 == 1'd1)))) begin
        reg_342 <= Input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055))) begin
        sum5_reg_1245 <= sum5_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100))) begin
        tmp4_reg_1210 <= grp_fu_1012_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100))) begin
        tmp6_reg_1220 <= tmp6_fu_790_p2;
        tmp_21_5_reg_1215 <= tmp_21_5_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100))) begin
        tmp_24_1_reg_1225 <= tmp_24_1_fu_825_p2;
        tmp_24_2_reg_1230[14 : 1] <= tmp_24_2_fu_855_p2[14 : 1];
        tmp_24_5_reg_1235 <= tmp_24_5_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1055 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        tmp_7_cast22_cast_mi_reg_1095[18 : 5] <= tmp_7_cast22_cast_mi_fu_472_p2[18 : 5];
        tmp_8_reg_1100 <= tmp_8_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        tmp_mid2_reg_1195[16 : 1] <= tmp_mid2_fu_632_p2[16 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_394_p2))) begin
        tmp_mid2_v_v_reg_1078 <= tmp_mid2_v_v_fu_426_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        Input_r_address0 = tmp_7_cast_mid2_fu_558_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage3 == 1'b0))) begin
        Input_r_address0 = sum_4_cast_mid2_fu_553_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2 == 1'b0))) begin
        Input_r_address0 = sum_cast_mid2_fu_533_p1;
    end else if (((exitcond_flatten_reg_1055 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_8_fu_504_p2) & (ap_block_pp0_stage1 == 1'b0))) begin
        Input_r_address0 = sum_2_cast_mid2_fu_486_p1;
    end else if (((exitcond_flatten_reg_1055 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_8_fu_504_p2) & (ap_block_pp0_stage1 == 1'b0))) begin
        Input_r_address0 = sum2_cast_fu_515_p1;
    end else begin
        Input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            Input_r_address1 = sum_1_cast_mid2_fu_543_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            Input_r_address1 = tmp_cast_mid2_fu_520_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            Input_r_address1 = sum_3_cast_mid2_fu_496_p1;
        end else begin
            Input_r_address1 = 'bx;
        end
    end else begin
        Input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((exitcond_flatten_reg_1055 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_8_fu_504_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((exitcond_flatten_reg_1055 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_8_fu_504_p2)))) begin
        Input_r_ce0 = 1'b1;
    end else begin
        Input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)))) begin
        Input_r_ce1 = 1'b1;
    end else begin
        Input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        Output_r_ce0 = 1'b1;
    end else begin
        Output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_1055) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        Output_r_we0 = 1'b1;
    end else begin
        Output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_1055) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter2_tmp_8_reg_1100) & (ap_block_pp0_stage2 == 1'b0))) begin
        Sum_2_phi_fu_331_p4 = Sum_6_6_reg_1250;
    end else begin
        Sum_2_phi_fu_331_p4 = ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_1055 == 1'd0) & (ap_block_pp0_stage0 == 1'b0))) begin
        X_phi_fu_321_p4 = X_1_reg_1139;
    end else begin
        X_phi_fu_321_p4 = X_reg_317;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_1055 == 1'd0) & (ap_block_pp0_stage0 == 1'b0))) begin
        Y_phi_fu_310_p4 = tmp_mid2_v_v_reg_1078;
    end else begin
        Y_phi_fu_310_p4 = Y_reg_306;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten_fu_394_p2)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state13))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) begin
        if ((ap_condition_944 == 1'b1)) begin
            buffer_address0 = 32'd6;
        end else if ((ap_condition_939 == 1'b1)) begin
            buffer_address0 = tmp_9_cast_fu_804_p1;
        end else if ((ap_condition_934 == 1'b1)) begin
            buffer_address0 = 32'd5;
        end else if ((ap_condition_930 == 1'b1)) begin
            buffer_address0 = tmp_22_5_cast_fu_691_p1;
        end else if ((ap_condition_926 == 1'b1)) begin
            buffer_address0 = 32'd1;
        end else if ((ap_condition_921 == 1'b1)) begin
            buffer_address0 = tmp_22_1_cast_fu_624_p1;
        end else if ((ap_condition_917 == 1'b1)) begin
            buffer_address0 = 32'd3;
        end else if ((ap_condition_912 == 1'b1)) begin
            buffer_address0 = tmp_22_3_cast_fu_567_p1;
        end else begin
            buffer_address0 = 'bx;
        end
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055))) begin
        if ((ap_condition_969 == 1'b1)) begin
            buffer_address1 = 32'd2;
        end else if ((ap_condition_965 == 1'b1)) begin
            buffer_address1 = tmp_22_2_cast_fu_643_p1;
        end else if ((ap_condition_961 == 1'b1)) begin
            buffer_address1 = 32'd0;
        end else if ((ap_condition_957 == 1'b1)) begin
            buffer_address1 = X_cast5_fu_620_p1;
        end else if ((ap_condition_953 == 1'b1)) begin
            buffer_address1 = 32'd4;
        end else if ((ap_condition_949 == 1'b1)) begin
            buffer_address1 = tmp_22_4_cast_fu_577_p1;
        end else begin
            buffer_address1 = 'bx;
        end
    end else begin
        buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        buffer_ce0 = 1'b1;
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)))) begin
        buffer_ce1 = 1'b1;
    end else begin
        buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer_d0 = reg_347;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage3 == 1'b0))) begin
        buffer_d0 = Input_load_13_reg_1188;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
        buffer_d0 = Input_load_9_reg_1159;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (ap_block_pp0_stage1 == 1'b0)))) begin
        buffer_d0 = reg_342;
    end else begin
        buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage3 == 1'b0))) begin
        buffer_d1 = Input_load_10_reg_1181;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (ap_block_pp0_stage1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0)))) begin
        buffer_d1 = reg_347;
    end else begin
        buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        buffer_we0 = 1'b1;
    end else begin
        buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)))) begin
        buffer_we1 = 1'b1;
    end else begin
        buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
        grp_fu_337_p0 = ap_reg_pp0_iter1_X_mid2_reg_1064;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage3 == 1'b0))) begin
        grp_fu_337_p0 = X_mid2_reg_1064;
    end else begin
        grp_fu_337_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_1055 == 1'd0) & (ap_block_pp0_stage0 == 1'b0))) begin
        indvar_flatten_phi_fu_299_p4 = indvar_flatten_next_reg_1059;
    end else begin
        indvar_flatten_phi_fu_299_p4 = indvar_flatten_reg_295;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond_flatten_fu_394_p2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond_flatten_fu_394_p2) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_block_pp0_stage2_subdone == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Output_r_address0 = sum5_cast_fu_1000_p1;

assign Output_r_d0 = {{Sum_2_phi_fu_331_p4[15:8]}};

assign Sum_5_6_fu_913_p2 = (tmp6_reg_1220 + tmp8_fu_908_p2);

assign Sum_6_6_fu_983_p2 = (tmp1_fu_962_p2 + tmp3_fu_978_p2);

assign X_cast20_cast_fu_501_p1 = X_mid2_reg_1064;

assign X_cast5_fu_620_p1 = ap_reg_pp0_iter1_X_mid2_reg_1064;

assign X_cast_fu_796_p1 = ap_reg_pp0_iter1_X_mid2_reg_1064;

assign X_mid2_fu_412_p3 = ((exitcond_fu_406_p2[0:0] === 1'b1) ? 9'd0 : X_phi_fu_321_p4);

assign Y_s_fu_420_p2 = (Y_phi_fu_310_p4 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_912 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0));
end

always @ (*) begin
    ap_condition_917 = ((1'b1 == ap_enable_reg_pp0_iter1) & (tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0));
end

always @ (*) begin
    ap_condition_921 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage2 == 1'b0));
end

always @ (*) begin
    ap_condition_926 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0));
end

always @ (*) begin
    ap_condition_930 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage3 == 1'b0));
end

always @ (*) begin
    ap_condition_934 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage3 == 1'b0));
end

always @ (*) begin
    ap_condition_939 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2));
end

always @ (*) begin
    ap_condition_944 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2));
end

always @ (*) begin
    ap_condition_949 = ((1'd0 == tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0));
end

always @ (*) begin
    ap_condition_953 = ((tmp_8_reg_1100 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0));
end

always @ (*) begin
    ap_condition_957 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage2 == 1'b0));
end

always @ (*) begin
    ap_condition_961 = ((1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0));
end

always @ (*) begin
    ap_condition_965 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage3 == 1'b0));
end

always @ (*) begin
    ap_condition_969 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'd1 == ap_reg_pp0_iter1_tmp_8_reg_1100) & (ap_block_pp0_stage3 == 1'b0));
end

always @ (*) begin
    ap_condition_972 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1055) & (1'd0 == ap_reg_pp0_iter1_tmp_8_reg_1100));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_328 = 'bx;

assign exitcond_flatten_fu_394_p2 = ((indvar_flatten_phi_fu_299_p4 == 17'd127980) ? 1'b1 : 1'b0);

assign exitcond_fu_406_p2 = ((X_phi_fu_321_p4 == 9'd474) ? 1'b1 : 1'b0);

assign grp_fu_1004_p0 = grp_fu_1004_p00;

assign grp_fu_1004_p00 = reg_342;

assign grp_fu_1004_p1 = 16'd98;

assign grp_fu_1012_p0 = grp_fu_1012_p00;

assign grp_fu_1012_p00 = reg_354;

assign grp_fu_1012_p1 = 16'd98;

assign grp_fu_337_p2 = (grp_fu_337_p0 + 9'd1);

assign indvar_flatten_next_fu_400_p2 = (indvar_flatten_phi_fu_299_p4 + 17'd1);

assign p_shl12_cast_fu_718_p1 = p_shl12_fu_711_p3;

assign p_shl12_fu_711_p3 = {{Input_load_9_reg_1159}, {4'd0}};

assign p_shl13_cast_fu_739_p1 = p_shl13_fu_732_p3;

assign p_shl13_fu_732_p3 = {{Input_load_10_reg_1181}, {6'd0}};

assign p_shl14_cast_fu_750_p1 = p_shl14_fu_743_p3;

assign p_shl14_fu_743_p3 = {{Input_load_10_reg_1181}, {1'd0}};

assign p_shl15_cast_fu_594_p1 = p_shl15_fu_586_p3;

assign p_shl15_fu_586_p3 = {{reg_347}, {6'd0}};

assign p_shl16_cast_fu_606_p1 = p_shl16_fu_598_p3;

assign p_shl16_fu_598_p3 = {{reg_347}, {1'd0}};

assign p_shl17_cast_fu_774_p1 = p_shl17_fu_767_p3;

assign p_shl17_fu_767_p3 = {{Input_load_13_reg_1188}, {4'd0}};

assign p_shl18_cast_fu_821_p1 = p_shl18_fu_813_p3;

assign p_shl18_fu_813_p3 = {{reg_359}, {4'd0}};

assign p_shl19_cast_fu_839_p1 = p_shl19_fu_831_p3;

assign p_shl19_fu_831_p3 = {{buffer_q1}, {6'd0}};

assign p_shl20_cast_fu_851_p1 = p_shl20_fu_843_p3;

assign p_shl20_fu_843_p3 = {{buffer_q1}, {1'd0}};

assign p_shl21_cast_fu_660_p1 = p_shl21_fu_652_p3;

assign p_shl21_fu_652_p3 = {{reg_359}, {6'd0}};

assign p_shl22_cast_fu_672_p1 = p_shl22_fu_664_p3;

assign p_shl22_fu_664_p3 = {{reg_359}, {1'd0}};

assign p_shl23_cast_fu_873_p1 = p_shl23_fu_865_p3;

assign p_shl23_fu_865_p3 = {{buffer_q0}, {4'd0}};

assign p_shl8_cast_fu_384_p1 = p_shl8_fu_376_p3;

assign p_shl8_cast_mid1_fu_454_p1 = p_shl8_mid1_fu_446_p3;

assign p_shl8_fu_376_p3 = {{Y_phi_fu_310_p4}, {5'd0}};

assign p_shl8_mid1_fu_446_p3 = {{Y_s_fu_420_p2}, {5'd0}};

assign p_shl_cast_fu_372_p1 = p_shl_fu_364_p3;

assign p_shl_cast_mid1_fu_442_p1 = p_shl_mid1_fu_434_p3;

assign p_shl_fu_364_p3 = {{Y_phi_fu_310_p4}, {9'd0}};

assign p_shl_mid1_fu_434_p3 = {{Y_s_fu_420_p2}, {9'd0}};

assign sum2_cast_fu_515_p1 = $signed(sum2_fu_509_p2);

assign sum2_fu_509_p2 = ($signed(X_cast20_cast_fu_501_p1) + $signed(tmp_7_cast22_cast_mi_1_fu_477_p1));

assign sum5_cast_fu_1000_p1 = sum5_reg_1245;

assign sum5_fu_918_p2 = (X_cast_fu_796_p1 + tmp_mid2_reg_1195);

assign sum_1_cast_mid2_fu_543_p1 = $signed(sum_1_cast_mid2_v_fu_538_p2);

assign sum_1_cast_mid2_v_fu_538_p2 = (tmp_cast_mid2_v_reg_1084 | 19'd2);

assign sum_2_cast_mid2_fu_486_p1 = $signed(sum_2_cast_mid2_v_fu_481_p2);

assign sum_2_cast_mid2_v_fu_481_p2 = (tmp_cast_mid2_v_reg_1084 | 19'd3);

assign sum_3_cast_mid2_fu_496_p1 = $signed(sum_3_cast_mid2_v_fu_491_p2);

assign sum_3_cast_mid2_v_fu_491_p2 = (tmp_cast_mid2_v_reg_1084 | 19'd4);

assign sum_4_cast_mid2_fu_553_p1 = $signed(sum_4_cast_mid2_v_fu_548_p2);

assign sum_4_cast_mid2_v_fu_548_p2 = (tmp_cast_mid2_v_reg_1084 | 19'd5);

assign sum_cast_mid2_fu_533_p1 = sum_cast_mid2_v_fu_527_p2;

assign sum_cast_mid2_v_fu_527_p2 = (sum_cast_mid2_v_v_fu_524_p1 | 24'd1);

assign sum_cast_mid2_v_v_fu_524_p1 = $signed(tmp_cast_mid2_v_reg_1084);

assign tmp10_cast_fu_904_p1 = $signed(tmp10_fu_898_p2);

assign tmp10_fu_898_p2 = ($signed(tmp_21_6_cast_fu_894_p1) + $signed(tmp_21_5_cast_fu_883_p1));

assign tmp1_fu_962_p2 = (tmp_15_cast_fu_931_p1 + tmp2_fu_956_p2);

assign tmp2_fu_956_p2 = ($signed(tmp_24_2_cast_fu_938_p1) + $signed(tmp_24_1_cast_fu_935_p1));

assign tmp3_fu_978_p2 = ($signed(tmp4_reg_1210) + $signed(tmp5_cast_fu_974_p1));

assign tmp5_cast_fu_974_p1 = $signed(tmp5_fu_968_p2);

assign tmp5_fu_968_p2 = ($signed(tmp_24_6_cast_fu_952_p1) + $signed(tmp_24_5_cast_fu_941_p1));

assign tmp6_fu_790_p2 = (tmp_13_cast_fu_704_p1 + tmp7_fu_784_p2);

assign tmp7_fu_784_p2 = ($signed(tmp_21_2_cast_fu_760_p1) + $signed(tmp_21_1_cast_fu_728_p1));

assign tmp8_fu_908_p2 = ($signed(tmp9_reg_1166) + $signed(tmp10_cast_fu_904_p1));

assign tmp_13_cast_fu_704_p1 = tmp_2_fu_696_p3;

assign tmp_15_cast_fu_931_p1 = tmp_3_fu_923_p3;

assign tmp_20_1_cast1_fu_708_p1 = Input_load_9_reg_1159;

assign tmp_20_5_cast1_fu_764_p1 = Input_load_13_reg_1188;

assign tmp_21_1_cast_fu_728_p1 = $signed(tmp_21_1_fu_722_p2);

assign tmp_21_1_fu_722_p2 = (p_shl12_cast_fu_718_p1 - tmp_20_1_cast1_fu_708_p1);

assign tmp_21_2_cast_fu_760_p1 = $signed(tmp_21_2_fu_754_p2);

assign tmp_21_2_fu_754_p2 = (p_shl13_cast_fu_739_p1 - p_shl14_cast_fu_750_p1);

assign tmp_21_4_fu_610_p2 = (p_shl15_cast_fu_594_p1 - p_shl16_cast_fu_606_p1);

assign tmp_21_5_cast_fu_883_p1 = $signed(tmp_21_5_reg_1215);

assign tmp_21_5_fu_778_p2 = (p_shl17_cast_fu_774_p1 - tmp_20_5_cast1_fu_764_p1);

assign tmp_21_6_cast_fu_894_p1 = tmp_21_6_fu_886_p3;

assign tmp_21_6_fu_886_p3 = {{reg_347}, {1'd0}};

assign tmp_22_1_cast_fu_624_p1 = grp_fu_337_p2;

assign tmp_22_2_cast_fu_643_p1 = tmp_22_2_fu_638_p2;

assign tmp_22_2_fu_638_p2 = (ap_reg_pp0_iter1_X_mid2_reg_1064 + 9'd2);

assign tmp_22_3_cast_fu_567_p1 = tmp_22_3_fu_562_p2;

assign tmp_22_3_fu_562_p2 = (ap_reg_pp0_iter1_X_mid2_reg_1064 + 9'd3);

assign tmp_22_4_cast_fu_577_p1 = tmp_22_4_fu_572_p2;

assign tmp_22_4_fu_572_p2 = (ap_reg_pp0_iter1_X_mid2_reg_1064 + 9'd4);

assign tmp_22_5_cast_fu_691_p1 = tmp_22_5_fu_686_p2;

assign tmp_22_5_fu_686_p2 = (ap_reg_pp0_iter1_X_mid2_reg_1064 + 9'd5);

assign tmp_23_1_cast1_fu_809_p1 = reg_359;

assign tmp_23_5_cast1_fu_861_p1 = buffer_q0;

assign tmp_24_1_cast_fu_935_p1 = $signed(tmp_24_1_reg_1225);

assign tmp_24_1_fu_825_p2 = (p_shl18_cast_fu_821_p1 - tmp_23_1_cast1_fu_809_p1);

assign tmp_24_2_cast_fu_938_p1 = $signed(tmp_24_2_reg_1230);

assign tmp_24_2_fu_855_p2 = (p_shl19_cast_fu_839_p1 - p_shl20_cast_fu_851_p1);

assign tmp_24_4_fu_676_p2 = (p_shl21_cast_fu_660_p1 - p_shl22_cast_fu_672_p1);

assign tmp_24_5_cast_fu_941_p1 = $signed(tmp_24_5_reg_1235);

assign tmp_24_5_fu_877_p2 = (p_shl23_cast_fu_873_p1 - tmp_23_5_cast1_fu_861_p1);

assign tmp_24_6_cast_fu_952_p1 = tmp_24_6_fu_944_p3;

assign tmp_24_6_fu_944_p3 = {{ap_reg_pp0_iter2_reg_342}, {1'd0}};

assign tmp_2_fu_696_p3 = {{reg_347}, {1'd0}};

assign tmp_3_fu_923_p3 = {{reg_354}, {1'd0}};

assign tmp_7_cast22_cast_mi_1_fu_477_p1 = $signed(tmp_7_cast22_cast_mi_fu_472_p2);

assign tmp_7_cast22_cast_mi_fu_472_p2 = (tmp_cast_mid2_v_reg_1084 | 19'd6);

assign tmp_7_cast_mid2_fu_558_p1 = $signed(tmp_7_cast22_cast_mi_reg_1095);

assign tmp_8_fu_504_p2 = ((X_mid2_reg_1064 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_9_cast_fu_804_p1 = tmp_9_fu_799_p2;

assign tmp_9_fu_799_p2 = (ap_reg_pp0_iter1_X_mid2_reg_1064 + 9'd6);

assign tmp_cast_mid2_fu_520_p1 = $signed(tmp_cast_mid2_v_reg_1084);

assign tmp_cast_mid2_v_fu_464_p3 = ((exitcond_fu_406_p2[0:0] === 1'b1) ? tmp_mid1_fu_458_p2 : tmp_s_fu_388_p2);

assign tmp_mid1_fu_458_p2 = (p_shl_cast_mid1_fu_442_p1 - p_shl8_cast_mid1_fu_454_p1);

assign tmp_mid2_fu_632_p0 = tmp_mid2_fu_632_p00;

assign tmp_mid2_fu_632_p00 = ap_reg_pp0_iter1_tmp_mid2_v_v_reg_1078;

assign tmp_mid2_fu_632_p2 = (tmp_mid2_fu_632_p0 * $signed('h1DA));

assign tmp_mid2_v_v_fu_426_p3 = ((exitcond_fu_406_p2[0:0] === 1'b1) ? Y_s_fu_420_p2 : Y_phi_fu_310_p4);

assign tmp_s_fu_388_p2 = (p_shl_cast_fu_372_p1 - p_shl8_cast_fu_384_p1);

always @ (posedge ap_clk) begin
    tmp_cast_mid2_v_reg_1084[4:0] <= 5'b00000;
    tmp_7_cast22_cast_mi_reg_1095[4:0] <= 5'b00110;
    tmp_mid2_reg_1195[0] <= 1'b0;
    tmp_24_2_reg_1230[0] <= 1'b0;
end

endmodule //Filter_horizontal_HW
