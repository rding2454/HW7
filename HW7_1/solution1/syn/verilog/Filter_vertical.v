// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter_vertical (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_r_address0,
        Input_r_ce0,
        Input_r_q0,
        Input_r_address1,
        Input_r_ce1,
        Input_r_q1,
        Output_r_address0,
        Output_r_ce0,
        Output_r_we0,
        Output_r_d0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_pp0_stage1 = 8'd4;
parameter    ap_ST_fsm_pp0_stage2 = 8'd8;
parameter    ap_ST_fsm_pp0_stage3 = 8'd16;
parameter    ap_ST_fsm_pp0_stage4 = 8'd32;
parameter    ap_ST_fsm_pp0_stage5 = 8'd64;
parameter    ap_ST_fsm_state11 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [18:0] Input_r_address0;
output   Input_r_ce0;
input  [7:0] Input_r_q0;
output  [18:0] Input_r_address1;
output   Input_r_ce1;
input  [7:0] Input_r_q1;
output  [22:0] Output_r_address0;
output   Output_r_ce0;
output   Output_r_we0;
output  [7:0] Output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[18:0] Input_r_address0;
reg Input_r_ce0;
reg[18:0] Input_r_address1;
reg Input_r_ce1;
reg Output_r_ce0;
reg Output_r_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [16:0] indvar_flatten_reg_289;
reg   [8:0] X_reg_300;
reg   [8:0] Y_reg_311;
wire   [7:0] buffer_q0;
reg   [7:0] reg_336;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] exitcond_flatten_reg_987;
reg   [0:0] tmp_reg_1035;
wire   [7:0] buffer_q1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] reg_341;
reg   [7:0] reg_346;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [7:0] reg_353;
wire   [0:0] exitcond_flatten_fu_358_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_987;
wire   [16:0] indvar_flatten_next_fu_364_p2;
reg   [16:0] indvar_flatten_next_reg_991;
wire   [8:0] Y_mid2_fu_376_p3;
reg   [8:0] Y_mid2_reg_996;
wire   [8:0] X_cast1_mid2_v_fu_390_p3;
reg   [8:0] X_cast1_mid2_v_reg_1010;
wire   [10:0] sum_2_cast_mid2_v_v_fu_398_p1;
reg   [10:0] sum_2_cast_mid2_v_v_reg_1020;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [11:0] sum_4_cast_mid2_v_v_fu_412_p1;
reg   [11:0] sum_4_cast_mid2_v_v_reg_1025;
wire   [11:0] sum_6_cast1_mid2_v_fu_426_p2;
reg   [11:0] sum_6_cast1_mid2_v_reg_1030;
wire   [0:0] tmp_fu_436_p2;
wire   [16:0] grp_fu_920_p3;
reg   [16:0] sum2_reg_1039;
wire   [16:0] grp_fu_928_p3;
reg   [16:0] sum5_reg_1089;
wire  signed [15:0] grp_fu_936_p3;
reg  signed [15:0] tmp4_reg_1104;
wire  signed [15:0] grp_fu_944_p3;
reg  signed [15:0] tmp9_reg_1119;
reg   [7:0] buffer_load_2_reg_1124;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [7:0] buffer_load_5_reg_1130;
reg   [7:0] Input_load_3_reg_1136;
reg   [7:0] Input_load_6_reg_1143;
wire   [8:0] grp_fu_331_p2;
reg   [8:0] Y_1_reg_1155;
wire   [15:0] tmp1_fu_743_p2;
reg   [15:0] tmp1_reg_1160;
wire   [13:0] tmp5_fu_749_p2;
reg   [13:0] tmp5_reg_1165;
wire   [15:0] tmp6_fu_867_p2;
reg   [15:0] tmp6_reg_1170;
wire   [13:0] tmp10_fu_873_p2;
reg   [13:0] tmp10_reg_1175;
wire   [15:0] Sum_4_6_fu_887_p2;
wire   [15:0] Sum_3_6_fu_900_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage2_subdone;
reg   [8:0] buffer_address0;
reg    buffer_ce0;
reg    buffer_we0;
reg   [7:0] buffer_d0;
reg   [8:0] buffer_address1;
reg    buffer_ce1;
reg    buffer_we1;
reg   [7:0] buffer_d1;
reg   [16:0] indvar_flatten_phi_fu_293_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] X_phi_fu_304_p4;
reg   [8:0] Y_phi_fu_315_p4;
wire   [15:0] ap_phi_precharge_reg_pp0_iter0_Sum_2_reg_322;
reg   [15:0] ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_322;
wire   [31:0] tmp_3_cast_fu_449_p1;
wire    ap_block_pp0_stage1;
wire   [31:0] tmp_4_cast_24_fu_459_p1;
wire   [31:0] sum_3_cast_mid2_fu_407_p1;
wire   [31:0] sum_4_cast_mid2_fu_421_p1;
wire   [31:0] sum2_cast_fu_489_p1;
wire    ap_block_pp0_stage2;
wire   [31:0] Y_cast_fu_485_p1;
wire   [31:0] tmp_1_cast_22_fu_493_p1;
wire   [31:0] X_cast4_mid2_fu_467_p1;
wire   [31:0] sum_1_cast_mid2_fu_480_p1;
wire   [31:0] tmp_2_cast_fu_526_p1;
wire    ap_block_pp0_stage3;
wire   [31:0] tmp_5_cast_fu_574_p1;
wire   [31:0] sum_2_cast_mid2_fu_506_p1;
wire   [31:0] sum_5_cast_mid2_fu_516_p1;
wire   [31:0] tmp_4_cast_fu_626_p1;
wire    ap_block_pp0_stage4;
wire   [31:0] sum_6_cast_mid2_fu_617_p1;
wire   [31:0] sum5_cast_fu_916_p1;
wire    ap_block_pp0_stage5;
wire   [0:0] exitcond_fu_370_p2;
wire   [8:0] X_s_fu_384_p2;
wire   [10:0] sum_3_cast_mid2_v_fu_401_p2;
wire   [11:0] sum_4_cast_mid2_v_fu_415_p2;
wire   [8:0] tmp_3_fu_444_p2;
wire   [8:0] tmp_4_23_fu_454_p2;
wire   [9:0] sum_1_cast_mid2_v_v_fu_471_p1;
wire   [9:0] sum_1_cast_mid2_v_fu_474_p2;
wire   [10:0] sum_2_cast_mid2_v_fu_501_p2;
wire   [11:0] sum_5_cast_mid2_v_fu_511_p2;
wire   [8:0] tmp_2_fu_521_p2;
wire   [13:0] p_shl10_fu_535_p3;
wire   [8:0] p_shl11_fu_547_p3;
wire   [14:0] p_shl10_cast_fu_543_p1;
wire   [14:0] p_shl11_cast_fu_555_p1;
wire  signed [14:0] tmp_10_4_fu_559_p2;
wire   [8:0] tmp_5_fu_569_p2;
wire   [13:0] p_shl4_fu_583_p3;
wire   [8:0] p_shl5_fu_595_p3;
wire   [14:0] p_shl4_cast_fu_591_p1;
wire   [14:0] p_shl5_cast_fu_603_p1;
wire  signed [14:0] tmp_8_4_fu_607_p2;
wire   [8:0] tmp_4_fu_621_p2;
wire   [8:0] tmp_1_fu_631_p3;
wire   [11:0] p_shl7_fu_647_p3;
wire   [12:0] p_shl7_cast_fu_655_p1;
wire   [12:0] tmp_9_1_cast1_fu_643_p1;
wire   [12:0] tmp_10_1_fu_659_p2;
wire   [13:0] p_shl8_fu_669_p3;
wire   [8:0] p_shl9_fu_680_p3;
wire   [14:0] p_shl8_cast_fu_676_p1;
wire   [14:0] p_shl9_cast_fu_687_p1;
wire   [14:0] tmp_10_2_fu_691_p2;
wire   [11:0] p_shl_fu_704_p3;
wire   [12:0] p_shl_cast_fu_711_p1;
wire   [12:0] tmp_9_5_cast1_fu_701_p1;
wire   [12:0] tmp_10_5_fu_715_p2;
wire   [8:0] tmp_10_6_fu_725_p3;
wire  signed [15:0] tmp_10_2_cast_fu_697_p1;
wire  signed [15:0] tmp_10_1_cast_fu_665_p1;
wire   [15:0] tmp_10_cast_fu_639_p1;
wire   [15:0] tmp2_fu_737_p2;
wire   [13:0] tmp_10_6_cast_fu_733_p1;
wire  signed [13:0] tmp_10_5_cast_fu_721_p1;
wire   [8:0] tmp_8_fu_755_p3;
wire   [11:0] p_shl1_fu_771_p3;
wire   [12:0] p_shl1_cast_fu_779_p1;
wire   [12:0] tmp_7_1_cast1_fu_767_p1;
wire   [12:0] tmp_8_1_fu_783_p2;
wire   [13:0] p_shl2_fu_793_p3;
wire   [8:0] p_shl3_fu_804_p3;
wire   [14:0] p_shl2_cast_fu_800_p1;
wire   [14:0] p_shl3_cast_fu_811_p1;
wire   [14:0] tmp_8_2_fu_815_p2;
wire   [11:0] p_shl6_fu_828_p3;
wire   [12:0] p_shl6_cast_fu_835_p1;
wire   [12:0] tmp_7_5_cast1_fu_825_p1;
wire   [12:0] tmp_8_5_fu_839_p2;
wire   [8:0] tmp_8_6_fu_849_p3;
wire  signed [15:0] tmp_8_2_cast_fu_821_p1;
wire  signed [15:0] tmp_8_1_cast_fu_789_p1;
wire   [15:0] tmp_8_cast_fu_763_p1;
wire   [15:0] tmp7_fu_861_p2;
wire   [13:0] tmp_8_6_cast_fu_857_p1;
wire  signed [13:0] tmp_8_5_cast_fu_845_p1;
wire  signed [15:0] tmp5_cast_fu_879_p1;
(* use_dsp48 = "no" *) wire   [15:0] tmp3_fu_882_p2;
wire  signed [15:0] tmp10_cast_fu_892_p1;
(* use_dsp48 = "no" *) wire   [15:0] tmp8_fu_895_p2;
wire   [8:0] grp_fu_920_p0;
wire   [9:0] grp_fu_920_p1;
wire   [11:0] grp_fu_920_p2;
wire   [8:0] grp_fu_928_p0;
wire   [9:0] grp_fu_928_p1;
wire   [8:0] grp_fu_928_p2;
wire   [7:0] grp_fu_936_p0;
wire   [7:0] grp_fu_936_p1;
wire   [7:0] grp_fu_944_p0;
wire   [7:0] grp_fu_944_p1;
wire    ap_CS_fsm_state11;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [16:0] grp_fu_920_p00;
wire   [16:0] grp_fu_920_p20;
wire   [16:0] grp_fu_928_p00;
wire   [16:0] grp_fu_928_p20;
wire   [15:0] grp_fu_936_p00;
wire   [15:0] grp_fu_944_p00;
reg    ap_condition_889;
reg    ap_condition_893;
reg    ap_condition_900;
reg    ap_condition_905;
reg    ap_condition_909;
reg    ap_condition_913;
reg    ap_condition_918;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Filter_vertical_bdEe #(
    .DataWidth( 8 ),
    .AddressRange( 270 ),
    .AddressWidth( 9 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .we0(buffer_we0),
    .d0(buffer_d0),
    .q0(buffer_q0),
    .address1(buffer_address1),
    .ce1(buffer_ce1),
    .we1(buffer_we1),
    .d1(buffer_d1),
    .q1(buffer_q1)
);

Filter_HW_mac_muleOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 17 ))
Filter_HW_mac_muleOg_U5(
    .din0(grp_fu_920_p0),
    .din1(grp_fu_920_p1),
    .din2(grp_fu_920_p2),
    .dout(grp_fu_920_p3)
);

Filter_HW_mac_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
Filter_HW_mac_mulfYi_U6(
    .din0(grp_fu_928_p0),
    .din1(grp_fu_928_p1),
    .din2(grp_fu_928_p2),
    .dout(grp_fu_928_p3)
);

Filter_HW_mac_mulcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
Filter_HW_mac_mulcud_x_U7(
    .din0(grp_fu_936_p0),
    .din1(grp_fu_936_p1),
    .din2(tmp_10_4_fu_559_p2),
    .dout(grp_fu_936_p3)
);

Filter_HW_mac_mulcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
Filter_HW_mac_mulcud_x_U8(
    .din0(grp_fu_944_p0),
    .din1(grp_fu_944_p1),
    .din2(tmp_8_4_fu_607_p2),
    .dout(grp_fu_944_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        X_reg_300 <= X_cast1_mid2_v_reg_1010;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        X_reg_300 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        Y_reg_311 <= Y_1_reg_1155;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        Y_reg_311 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_322 <= Sum_3_6_fu_900_p2;
    end else if (((exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_322 <= Sum_4_6_fu_887_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_322 <= ap_phi_precharge_reg_pp0_iter0_Sum_2_reg_322;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_289 <= indvar_flatten_next_reg_991;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_289 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_918 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
            reg_336 <= buffer_q1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
            reg_336 <= buffer_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_918 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
            reg_341 <= buffer_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
            reg_341 <= buffer_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        reg_346 <= Input_r_q1;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (tmp_reg_1035 == 1'd1)))) begin
        reg_346 <= Input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        Input_load_3_reg_1136 <= Input_r_q1;
        Input_load_6_reg_1143 <= Input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_fu_358_p2))) begin
        X_cast1_mid2_v_reg_1010 <= X_cast1_mid2_v_fu_390_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        Y_1_reg_1155 <= grp_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_fu_358_p2))) begin
        Y_mid2_reg_996 <= Y_mid2_fu_376_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_987 <= exitcond_flatten_reg_987;
        exitcond_flatten_reg_987 <= exitcond_flatten_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        buffer_load_2_reg_1124 <= buffer_q1;
        buffer_load_5_reg_1130 <= buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        indvar_flatten_next_reg_991 <= indvar_flatten_next_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (tmp_reg_1035 == 1'd1)))) begin
        reg_353 <= Input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == tmp_fu_436_p2))) begin
        sum2_reg_1039 <= grp_fu_920_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0) & (exitcond_flatten_reg_987 == 1'd0))) begin
        sum5_reg_1089 <= grp_fu_928_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        sum_2_cast_mid2_v_v_reg_1020[8 : 0] <= sum_2_cast_mid2_v_v_fu_398_p1[8 : 0];
        sum_4_cast_mid2_v_v_reg_1025[8 : 0] <= sum_4_cast_mid2_v_v_fu_412_p1[8 : 0];
        sum_6_cast1_mid2_v_reg_1030 <= sum_6_cast1_mid2_v_fu_426_p2;
        tmp_reg_1035 <= tmp_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        tmp10_reg_1175 <= tmp10_fu_873_p2;
        tmp6_reg_1170 <= tmp6_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        tmp1_reg_1160 <= tmp1_fu_743_p2;
        tmp5_reg_1165 <= tmp5_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        tmp4_reg_1104 <= grp_fu_936_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (tmp_reg_1035 == 1'd1))) begin
        tmp9_reg_1119 <= grp_fu_944_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            Input_r_address0 = sum_5_cast_mid2_fu_516_p1;
        end else if ((ap_condition_893 == 1'b1)) begin
            Input_r_address0 = X_cast4_mid2_fu_467_p1;
        end else if ((ap_condition_889 == 1'b1)) begin
            Input_r_address0 = sum2_cast_fu_489_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            Input_r_address0 = sum_3_cast_mid2_fu_407_p1;
        end else begin
            Input_r_address0 = 'bx;
        end
    end else begin
        Input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
            Input_r_address1 = sum_6_cast_mid2_fu_617_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            Input_r_address1 = sum_2_cast_mid2_fu_506_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            Input_r_address1 = sum_1_cast_mid2_fu_480_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            Input_r_address1 = sum_4_cast_mid2_fu_421_p1;
        end else begin
            Input_r_address1 = 'bx;
        end
    end else begin
        Input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        Input_r_ce0 = 1'b1;
    end else begin
        Input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)))) begin
        Input_r_ce1 = 1'b1;
    end else begin
        Input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        Output_r_ce0 = 1'b1;
    end else begin
        Output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_987) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        Output_r_we0 = 1'b1;
    end else begin
        Output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        X_phi_fu_304_p4 = X_cast1_mid2_v_reg_1010;
    end else begin
        X_phi_fu_304_p4 = X_reg_300;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        Y_phi_fu_315_p4 = Y_1_reg_1155;
    end else begin
        Y_phi_fu_315_p4 = Y_reg_311;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten_fu_358_p2)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state11))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        buffer_address0 = 32'd6;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
        buffer_address0 = 32'd2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
        buffer_address0 = 32'd1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_1035 == 1'd1) & (ap_block_pp0_stage3 == 1'b0))) begin
        buffer_address0 = 32'd4;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
        buffer_address0 = tmp_5_cast_fu_574_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2 == 1'b0))) begin
        buffer_address0 = tmp_1_cast_22_fu_493_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
        buffer_address0 = tmp_3_cast_fu_449_p1;
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
            buffer_address1 = 32'd5;
        end else if ((ap_condition_913 == 1'b1)) begin
            buffer_address1 = 32'd0;
        end else if ((ap_condition_909 == 1'b1)) begin
            buffer_address1 = tmp_4_cast_fu_626_p1;
        end else if ((ap_condition_905 == 1'b1)) begin
            buffer_address1 = 32'd3;
        end else if ((ap_condition_900 == 1'b1)) begin
            buffer_address1 = tmp_2_cast_fu_526_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            buffer_address1 = Y_cast_fu_485_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            buffer_address1 = tmp_4_cast_24_fu_459_p1;
        end else begin
            buffer_address1 = 'bx;
        end
    end else begin
        buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (tmp_reg_1035 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        buffer_ce0 = 1'b1;
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (tmp_reg_1035 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)))) begin
        buffer_ce1 = 1'b1;
    end else begin
        buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        buffer_d0 = reg_346;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
        buffer_d0 = Input_load_3_reg_1136;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_1035 == 1'd1) & (ap_block_pp0_stage3 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0)))) begin
        buffer_d0 = reg_353;
    end else begin
        buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
        buffer_d1 = Input_load_6_reg_1143;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_1035 == 1'd1) & (ap_block_pp0_stage3 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0)))) begin
        buffer_d1 = reg_346;
    end else begin
        buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (tmp_reg_1035 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        buffer_we0 = 1'b1;
    end else begin
        buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0) & (tmp_reg_1035 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)))) begin
        buffer_we1 = 1'b1;
    end else begin
        buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        indvar_flatten_phi_fu_293_p4 = indvar_flatten_next_reg_991;
    end else begin
        indvar_flatten_phi_fu_293_p4 = indvar_flatten_reg_289;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond_flatten_fu_358_p2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond_flatten_fu_358_p2) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_block_pp0_stage2_subdone == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Output_r_address0 = sum5_cast_fu_916_p1;

assign Output_r_d0 = {{ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_322[15:8]}};

assign Sum_3_6_fu_900_p2 = (tmp6_reg_1170 + tmp8_fu_895_p2);

assign Sum_4_6_fu_887_p2 = (tmp1_reg_1160 + tmp3_fu_882_p2);

assign X_cast1_mid2_v_fu_390_p3 = ((exitcond_fu_370_p2[0:0] === 1'b1) ? X_s_fu_384_p2 : X_phi_fu_304_p4);

assign X_cast4_mid2_fu_467_p1 = X_cast1_mid2_v_reg_1010;

assign X_s_fu_384_p2 = (X_phi_fu_304_p4 + 9'd1);

assign Y_cast_fu_485_p1 = Y_mid2_reg_996;

assign Y_mid2_fu_376_p3 = ((exitcond_fu_370_p2[0:0] === 1'b1) ? 9'd0 : Y_phi_fu_315_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_889 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (ap_block_pp0_stage2 == 1'b0));
end

always @ (*) begin
    ap_condition_893 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (ap_block_pp0_stage2 == 1'b0));
end

always @ (*) begin
    ap_condition_900 = ((exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0));
end

always @ (*) begin
    ap_condition_905 = ((exitcond_flatten_reg_987 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_1035 == 1'd1) & (ap_block_pp0_stage3 == 1'b0));
end

always @ (*) begin
    ap_condition_909 = ((exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0));
end

always @ (*) begin
    ap_condition_913 = ((exitcond_flatten_reg_987 == 1'd0) & (tmp_reg_1035 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0));
end

always @ (*) begin
    ap_condition_918 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_987 == 1'd0) & (1'd0 == tmp_reg_1035));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_precharge_reg_pp0_iter0_Sum_2_reg_322 = 'bx;

assign exitcond_flatten_fu_358_p2 = ((indvar_flatten_phi_fu_293_p4 == 17'd125136) ? 1'b1 : 1'b0);

assign exitcond_fu_370_p2 = ((Y_phi_fu_315_p4 == 9'd264) ? 1'b1 : 1'b0);

assign grp_fu_331_p2 = (Y_mid2_reg_996 + 9'd1);

assign grp_fu_920_p0 = grp_fu_920_p00;

assign grp_fu_920_p00 = Y_mid2_reg_996;

assign grp_fu_920_p1 = 17'd474;

assign grp_fu_920_p2 = grp_fu_920_p20;

assign grp_fu_920_p20 = sum_6_cast1_mid2_v_fu_426_p2;

assign grp_fu_928_p0 = grp_fu_928_p00;

assign grp_fu_928_p00 = Y_mid2_reg_996;

assign grp_fu_928_p1 = 17'd474;

assign grp_fu_928_p2 = grp_fu_928_p20;

assign grp_fu_928_p20 = X_cast1_mid2_v_reg_1010;

assign grp_fu_936_p0 = grp_fu_936_p00;

assign grp_fu_936_p00 = reg_336;

assign grp_fu_936_p1 = 16'd98;

assign grp_fu_944_p0 = grp_fu_944_p00;

assign grp_fu_944_p00 = reg_346;

assign grp_fu_944_p1 = 16'd98;

assign indvar_flatten_next_fu_364_p2 = (indvar_flatten_phi_fu_293_p4 + 17'd1);

assign p_shl10_cast_fu_543_p1 = p_shl10_fu_535_p3;

assign p_shl10_fu_535_p3 = {{reg_341}, {6'd0}};

assign p_shl11_cast_fu_555_p1 = p_shl11_fu_547_p3;

assign p_shl11_fu_547_p3 = {{reg_341}, {1'd0}};

assign p_shl1_cast_fu_779_p1 = p_shl1_fu_771_p3;

assign p_shl1_fu_771_p3 = {{reg_353}, {4'd0}};

assign p_shl2_cast_fu_800_p1 = p_shl2_fu_793_p3;

assign p_shl2_fu_793_p3 = {{Input_load_3_reg_1136}, {6'd0}};

assign p_shl3_cast_fu_811_p1 = p_shl3_fu_804_p3;

assign p_shl3_fu_804_p3 = {{Input_load_3_reg_1136}, {1'd0}};

assign p_shl4_cast_fu_591_p1 = p_shl4_fu_583_p3;

assign p_shl4_fu_583_p3 = {{reg_353}, {6'd0}};

assign p_shl5_cast_fu_603_p1 = p_shl5_fu_595_p3;

assign p_shl5_fu_595_p3 = {{reg_353}, {1'd0}};

assign p_shl6_cast_fu_835_p1 = p_shl6_fu_828_p3;

assign p_shl6_fu_828_p3 = {{Input_load_6_reg_1143}, {4'd0}};

assign p_shl7_cast_fu_655_p1 = p_shl7_fu_647_p3;

assign p_shl7_fu_647_p3 = {{reg_341}, {4'd0}};

assign p_shl8_cast_fu_676_p1 = p_shl8_fu_669_p3;

assign p_shl8_fu_669_p3 = {{buffer_load_2_reg_1124}, {6'd0}};

assign p_shl9_cast_fu_687_p1 = p_shl9_fu_680_p3;

assign p_shl9_fu_680_p3 = {{buffer_load_2_reg_1124}, {1'd0}};

assign p_shl_cast_fu_711_p1 = p_shl_fu_704_p3;

assign p_shl_fu_704_p3 = {{buffer_load_5_reg_1130}, {4'd0}};

assign sum2_cast_fu_489_p1 = sum2_reg_1039;

assign sum5_cast_fu_916_p1 = sum5_reg_1089;

assign sum_1_cast_mid2_fu_480_p1 = sum_1_cast_mid2_v_fu_474_p2;

assign sum_1_cast_mid2_v_fu_474_p2 = (sum_1_cast_mid2_v_v_fu_471_p1 + 10'd474);

assign sum_1_cast_mid2_v_v_fu_471_p1 = X_cast1_mid2_v_reg_1010;

assign sum_2_cast_mid2_fu_506_p1 = sum_2_cast_mid2_v_fu_501_p2;

assign sum_2_cast_mid2_v_fu_501_p2 = (sum_2_cast_mid2_v_v_reg_1020 + 11'd948);

assign sum_2_cast_mid2_v_v_fu_398_p1 = X_cast1_mid2_v_reg_1010;

assign sum_3_cast_mid2_fu_407_p1 = sum_3_cast_mid2_v_fu_401_p2;

assign sum_3_cast_mid2_v_fu_401_p2 = ($signed(sum_2_cast_mid2_v_v_fu_398_p1) + $signed(11'd1422));

assign sum_4_cast_mid2_fu_421_p1 = sum_4_cast_mid2_v_fu_415_p2;

assign sum_4_cast_mid2_v_fu_415_p2 = (sum_4_cast_mid2_v_v_fu_412_p1 + 12'd1896);

assign sum_4_cast_mid2_v_v_fu_412_p1 = X_cast1_mid2_v_reg_1010;

assign sum_5_cast_mid2_fu_516_p1 = sum_5_cast_mid2_v_fu_511_p2;

assign sum_5_cast_mid2_v_fu_511_p2 = ($signed(sum_4_cast_mid2_v_v_reg_1025) + $signed(12'd2370));

assign sum_6_cast1_mid2_v_fu_426_p2 = ($signed(sum_4_cast_mid2_v_v_fu_412_p1) + $signed(12'd2844));

assign sum_6_cast_mid2_fu_617_p1 = sum_6_cast1_mid2_v_reg_1030;

assign tmp10_cast_fu_892_p1 = $signed(tmp10_reg_1175);

assign tmp10_fu_873_p2 = ($signed(tmp_8_6_cast_fu_857_p1) + $signed(tmp_8_5_cast_fu_845_p1));

assign tmp1_fu_743_p2 = (tmp_10_cast_fu_639_p1 + tmp2_fu_737_p2);

assign tmp2_fu_737_p2 = ($signed(tmp_10_2_cast_fu_697_p1) + $signed(tmp_10_1_cast_fu_665_p1));

assign tmp3_fu_882_p2 = ($signed(tmp4_reg_1104) + $signed(tmp5_cast_fu_879_p1));

assign tmp5_cast_fu_879_p1 = $signed(tmp5_reg_1165);

assign tmp5_fu_749_p2 = ($signed(tmp_10_6_cast_fu_733_p1) + $signed(tmp_10_5_cast_fu_721_p1));

assign tmp6_fu_867_p2 = (tmp_8_cast_fu_763_p1 + tmp7_fu_861_p2);

assign tmp7_fu_861_p2 = ($signed(tmp_8_2_cast_fu_821_p1) + $signed(tmp_8_1_cast_fu_789_p1));

assign tmp8_fu_895_p2 = ($signed(tmp9_reg_1119) + $signed(tmp10_cast_fu_892_p1));

assign tmp_10_1_cast_fu_665_p1 = $signed(tmp_10_1_fu_659_p2);

assign tmp_10_1_fu_659_p2 = (p_shl7_cast_fu_655_p1 - tmp_9_1_cast1_fu_643_p1);

assign tmp_10_2_cast_fu_697_p1 = $signed(tmp_10_2_fu_691_p2);

assign tmp_10_2_fu_691_p2 = (p_shl8_cast_fu_676_p1 - p_shl9_cast_fu_687_p1);

assign tmp_10_4_fu_559_p2 = (p_shl10_cast_fu_543_p1 - p_shl11_cast_fu_555_p1);

assign tmp_10_5_cast_fu_721_p1 = $signed(tmp_10_5_fu_715_p2);

assign tmp_10_5_fu_715_p2 = (p_shl_cast_fu_711_p1 - tmp_9_5_cast1_fu_701_p1);

assign tmp_10_6_cast_fu_733_p1 = tmp_10_6_fu_725_p3;

assign tmp_10_6_fu_725_p3 = {{reg_346}, {1'd0}};

assign tmp_10_cast_fu_639_p1 = tmp_1_fu_631_p3;

assign tmp_1_cast_22_fu_493_p1 = grp_fu_331_p2;

assign tmp_1_fu_631_p3 = {{reg_336}, {1'd0}};

assign tmp_2_cast_fu_526_p1 = tmp_2_fu_521_p2;

assign tmp_2_fu_521_p2 = (Y_mid2_reg_996 + 9'd2);

assign tmp_3_cast_fu_449_p1 = tmp_3_fu_444_p2;

assign tmp_3_fu_444_p2 = (Y_mid2_reg_996 + 9'd3);

assign tmp_4_23_fu_454_p2 = (Y_mid2_reg_996 + 9'd4);

assign tmp_4_cast_24_fu_459_p1 = tmp_4_23_fu_454_p2;

assign tmp_4_cast_fu_626_p1 = tmp_4_fu_621_p2;

assign tmp_4_fu_621_p2 = (Y_mid2_reg_996 + 9'd6);

assign tmp_5_cast_fu_574_p1 = tmp_5_fu_569_p2;

assign tmp_5_fu_569_p2 = (Y_mid2_reg_996 + 9'd5);

assign tmp_7_1_cast1_fu_767_p1 = reg_353;

assign tmp_7_5_cast1_fu_825_p1 = Input_load_6_reg_1143;

assign tmp_8_1_cast_fu_789_p1 = $signed(tmp_8_1_fu_783_p2);

assign tmp_8_1_fu_783_p2 = (p_shl1_cast_fu_779_p1 - tmp_7_1_cast1_fu_767_p1);

assign tmp_8_2_cast_fu_821_p1 = $signed(tmp_8_2_fu_815_p2);

assign tmp_8_2_fu_815_p2 = (p_shl2_cast_fu_800_p1 - p_shl3_cast_fu_811_p1);

assign tmp_8_4_fu_607_p2 = (p_shl4_cast_fu_591_p1 - p_shl5_cast_fu_603_p1);

assign tmp_8_5_cast_fu_845_p1 = $signed(tmp_8_5_fu_839_p2);

assign tmp_8_5_fu_839_p2 = (p_shl6_cast_fu_835_p1 - tmp_7_5_cast1_fu_825_p1);

assign tmp_8_6_cast_fu_857_p1 = tmp_8_6_fu_849_p3;

assign tmp_8_6_fu_849_p3 = {{Input_r_q1}, {1'd0}};

assign tmp_8_cast_fu_763_p1 = tmp_8_fu_755_p3;

assign tmp_8_fu_755_p3 = {{reg_346}, {1'd0}};

assign tmp_9_1_cast1_fu_643_p1 = reg_341;

assign tmp_9_5_cast1_fu_701_p1 = buffer_load_5_reg_1130;

assign tmp_fu_436_p2 = ((Y_mid2_reg_996 == 9'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    sum_2_cast_mid2_v_v_reg_1020[10:9] <= 2'b00;
    sum_4_cast_mid2_v_v_reg_1025[11:9] <= 3'b000;
end

endmodule //Filter_vertical
