-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter_horizontal_HW is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Input_r_address0 : OUT STD_LOGIC_VECTOR (22 downto 0);
    Input_r_ce0 : OUT STD_LOGIC;
    Input_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    Input_r_address1 : OUT STD_LOGIC_VECTOR (22 downto 0);
    Input_r_ce1 : OUT STD_LOGIC;
    Input_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    Output_r_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    Output_r_ce0 : OUT STD_LOGIC;
    Output_r_we0 : OUT STD_LOGIC;
    Output_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of Filter_horizontal_HW is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv17_1F3EC : STD_LOGIC_VECTOR (16 downto 0) := "11111001111101100";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv9_1DA : STD_LOGIC_VECTOR (8 downto 0) := "111011010";
    constant ap_const_lv19_6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000110";
    constant ap_const_lv19_3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000011";
    constant ap_const_lv19_4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv19_2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_const_lv19_5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000101";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv17_1DA : STD_LOGIC_VECTOR (16 downto 0) := "00000000111011010";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_62 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001100010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_295 : STD_LOGIC_VECTOR (16 downto 0);
    signal Y_reg_306 : STD_LOGIC_VECTOR (8 downto 0);
    signal X_reg_317 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_342 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_reg_342 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_347 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_flatten_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_8_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal buffer_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_359 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_flatten_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_400_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal indvar_flatten_next_reg_1059 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal X_mid2_fu_412_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal X_mid2_reg_1064 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter1_X_mid2_reg_1064 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid2_v_v_fu_426_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid2_v_v_reg_1078 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter1_tmp_mid2_v_v_reg_1078 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_mid2_v_fu_464_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_cast_mid2_v_reg_1084 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_7_cast22_cast_mi_fu_472_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_7_cast22_cast_mi_reg_1095 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_8_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_8_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_337_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal X_1_reg_1139 : STD_LOGIC_VECTOR (8 downto 0);
    signal Input_load_9_reg_1159 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1004_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_reg_1166 : STD_LOGIC_VECTOR (15 downto 0);
    signal Input_load_10_reg_1181 : STD_LOGIC_VECTOR (7 downto 0);
    signal Input_load_13_reg_1188 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_mid2_fu_632_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_mid2_reg_1195 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1012_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_1210 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_5_fu_778_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_21_5_reg_1215 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp6_fu_790_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_1_fu_825_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_1_reg_1225 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_2_fu_855_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_24_2_reg_1230 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_24_5_fu_877_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_5_reg_1235 : STD_LOGIC_VECTOR (12 downto 0);
    signal Sum_5_6_fu_913_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal Sum_5_6_reg_1240 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum5_fu_918_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum5_reg_1245 : STD_LOGIC_VECTOR (16 downto 0);
    signal Sum_6_6_fu_983_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal Sum_6_6_reg_1250 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal buffer_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_ce0 : STD_LOGIC;
    signal buffer_we0 : STD_LOGIC;
    signal buffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_ce1 : STD_LOGIC;
    signal buffer_we1 : STD_LOGIC;
    signal buffer_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_phi_fu_299_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal Y_phi_fu_310_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal X_phi_fu_321_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_328 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328 : STD_LOGIC_VECTOR (15 downto 0);
    signal Sum_2_phi_fu_331_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal sum2_cast_fu_515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal sum_2_cast_mid2_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_cast_mid2_fu_496_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_mid2_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_cast_mid2_fu_533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_cast_mid2_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal sum_4_cast_mid2_fu_553_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_cast_mid2_fu_558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_3_cast_fu_567_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_4_cast_fu_577_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_cast5_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_1_cast_fu_624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_2_cast_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_5_cast_fu_691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_cast_fu_804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum5_cast_fu_1000_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_337_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_fu_364_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl8_fu_376_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_fu_372_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl8_cast_fu_384_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Y_s_fu_420_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_mid1_fu_434_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl8_mid1_fu_446_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_cast_mid1_fu_442_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl8_cast_mid1_fu_454_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_mid1_fu_458_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_s_fu_388_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sum_2_cast_mid2_v_fu_481_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sum_3_cast_mid2_v_fu_491_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal X_cast20_cast_fu_501_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_7_cast22_cast_mi_1_fu_477_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sum2_fu_509_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sum_cast_mid2_v_v_fu_524_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sum_cast_mid2_v_fu_527_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sum_1_cast_mid2_v_fu_538_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sum_4_cast_mid2_v_fu_548_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_22_3_fu_562_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_4_fu_572_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl15_fu_586_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl16_fu_598_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl15_cast_fu_594_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl16_cast_fu_606_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_21_4_fu_610_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_mid2_fu_632_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_2_fu_638_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl21_fu_652_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl22_fu_664_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl21_cast_fu_660_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl22_cast_fu_672_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_24_4_fu_676_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_22_5_fu_686_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_696_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl12_fu_711_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl12_cast_fu_718_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_20_1_cast1_fu_708_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_21_1_fu_722_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl13_fu_732_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl14_fu_743_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl13_cast_fu_739_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl14_cast_fu_750_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_21_2_fu_754_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl17_fu_767_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl17_cast_fu_774_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_20_5_cast1_fu_764_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_21_2_cast_fu_760_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_1_cast_fu_728_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_cast_fu_704_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_784_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_799_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl18_fu_813_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl18_cast_fu_821_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_23_1_cast1_fu_809_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl19_fu_831_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl20_fu_843_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl19_cast_fu_839_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl20_cast_fu_851_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl23_fu_865_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl23_cast_fu_873_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_23_5_cast1_fu_861_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_21_6_fu_886_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_6_cast_fu_894_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_21_5_cast_fu_883_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp10_fu_898_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp10_cast_fu_904_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_908_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp8_fu_908_p2 : signal is "no";
    signal X_cast_fu_796_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_923_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_6_fu_944_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_2_cast_fu_938_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_1_cast_fu_935_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_cast_fu_931_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_956_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_6_cast_fu_952_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_24_5_cast_fu_941_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp5_fu_968_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp5_cast_fu_974_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_962_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_978_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp3_fu_978_p2 : signal is "no";
    signal grp_fu_1004_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1004_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1012_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1012_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1004_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1012_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_mid2_fu_632_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_condition_912 : BOOLEAN;
    signal ap_condition_917 : BOOLEAN;
    signal ap_condition_921 : BOOLEAN;
    signal ap_condition_926 : BOOLEAN;
    signal ap_condition_930 : BOOLEAN;
    signal ap_condition_934 : BOOLEAN;
    signal ap_condition_939 : BOOLEAN;
    signal ap_condition_944 : BOOLEAN;
    signal ap_condition_949 : BOOLEAN;
    signal ap_condition_953 : BOOLEAN;
    signal ap_condition_957 : BOOLEAN;
    signal ap_condition_961 : BOOLEAN;
    signal ap_condition_965 : BOOLEAN;
    signal ap_condition_969 : BOOLEAN;
    signal ap_condition_972 : BOOLEAN;

    component Filter_HW_mac_mulcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Filter_horizontalbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buffer_U : component Filter_horizontalbkb
    generic map (
        DataWidth => 8,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_address0,
        ce0 => buffer_ce0,
        we0 => buffer_we0,
        d0 => buffer_d0,
        q0 => buffer_q0,
        address1 => buffer_address1,
        ce1 => buffer_ce1,
        we1 => buffer_we1,
        d1 => buffer_d1,
        q1 => buffer_q1);

    Filter_HW_mac_mulcud_U0 : component Filter_HW_mac_mulcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 15,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1004_p0,
        din1 => grp_fu_1004_p1,
        din2 => tmp_21_4_fu_610_p2,
        dout => grp_fu_1004_p3);

    Filter_HW_mac_mulcud_U1 : component Filter_HW_mac_mulcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 15,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1012_p0,
        din1 => grp_fu_1012_p1,
        din2 => tmp_24_4_fu_676_p2,
        dout => grp_fu_1012_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_subdone = ap_const_boolean_0))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_subdone = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    X_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_1055 = ap_const_lv1_0))) then 
                X_reg_317 <= X_1_reg_1139;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                X_reg_317 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    Y_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_1055 = ap_const_lv1_0))) then 
                Y_reg_306 <= tmp_mid2_v_v_reg_1078;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                Y_reg_306 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328 <= Sum_5_6_reg_1240;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then 
                ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328 <= ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_328;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_1055 = ap_const_lv1_0))) then 
                indvar_flatten_reg_295 <= indvar_flatten_next_reg_1059;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_295 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100))) then 
                reg_347 <= Input_r_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_1055 = ap_const_lv1_0) and (tmp_8_reg_1100 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)))) then 
                reg_347 <= Input_r_q1;
            end if; 
        end if;
    end process;

    reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_972 = ap_const_boolean_1)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then 
                    reg_354 <= buffer_q1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then 
                    reg_354 <= buffer_q0;
                end if;
            end if; 
        end if;
    end process;

    reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_972 = ap_const_boolean_1)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then 
                    reg_359 <= buffer_q0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then 
                    reg_359 <= buffer_q1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then
                Input_load_10_reg_1181 <= Input_r_q1;
                Input_load_13_reg_1188 <= Input_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055))) then
                Input_load_9_reg_1159 <= Input_r_q0;
                tmp9_reg_1166 <= grp_fu_1004_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100))) then
                Sum_5_6_reg_1240 <= Sum_5_6_fu_913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_1055))) then
                Sum_6_6_reg_1250 <= Sum_6_6_fu_983_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                X_1_reg_1139 <= grp_fu_337_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_394_p2))) then
                X_mid2_reg_1064 <= X_mid2_fu_412_p3;
                    tmp_cast_mid2_v_reg_1084(18 downto 5) <= tmp_cast_mid2_v_fu_464_p3(18 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_X_mid2_reg_1064 <= X_mid2_reg_1064;
                ap_reg_pp0_iter1_exitcond_flatten_reg_1055 <= exitcond_flatten_reg_1055;
                ap_reg_pp0_iter1_tmp_mid2_v_v_reg_1078 <= tmp_mid2_v_v_reg_1078;
                ap_reg_pp0_iter2_exitcond_flatten_reg_1055 <= ap_reg_pp0_iter1_exitcond_flatten_reg_1055;
                ap_reg_pp0_iter2_reg_342 <= reg_342;
                exitcond_flatten_reg_1055 <= exitcond_flatten_fu_394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_tmp_8_reg_1100 <= tmp_8_reg_1100;
                ap_reg_pp0_iter2_tmp_8_reg_1100 <= ap_reg_pp0_iter1_tmp_8_reg_1100;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_1059 <= indvar_flatten_next_fu_400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (exitcond_flatten_reg_1055 = ap_const_lv1_0) and (tmp_8_reg_1100 = ap_const_lv1_1)))) then
                reg_342 <= Input_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055))) then
                sum5_reg_1245 <= sum5_fu_918_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100))) then
                tmp4_reg_1210 <= grp_fu_1012_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100))) then
                tmp6_reg_1220 <= tmp6_fu_790_p2;
                tmp_21_5_reg_1215 <= tmp_21_5_fu_778_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100))) then
                tmp_24_1_reg_1225 <= tmp_24_1_fu_825_p2;
                    tmp_24_2_reg_1230(14 downto 1) <= tmp_24_2_fu_855_p2(14 downto 1);
                tmp_24_5_reg_1235 <= tmp_24_5_fu_877_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0))) then
                    tmp_7_cast22_cast_mi_reg_1095(18 downto 5) <= tmp_7_cast22_cast_mi_fu_472_p2(18 downto 5);
                tmp_8_reg_1100 <= tmp_8_fu_504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then
                    tmp_mid2_reg_1195(16 downto 1) <= tmp_mid2_fu_632_p2(16 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_394_p2))) then
                tmp_mid2_v_v_reg_1078 <= tmp_mid2_v_v_fu_426_p3;
            end if;
        end if;
    end process;
    tmp_cast_mid2_v_reg_1084(4 downto 0) <= "00000";
    tmp_7_cast22_cast_mi_reg_1095(4 downto 0) <= "00110";
    tmp_mid2_reg_1195(0) <= '0';
    tmp_24_2_reg_1230(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, exitcond_flatten_fu_394_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter2, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten_fu_394_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten_fu_394_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_block_pp0_stage1_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_block_pp0_stage2_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    Input_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_8_fu_504_p2, ap_block_pp0_stage0, ap_block_pp0_stage2, sum2_cast_fu_515_p1, ap_block_pp0_stage1, sum_2_cast_mid2_fu_486_p1, sum_cast_mid2_fu_533_p1, ap_block_pp0_stage3, sum_4_cast_mid2_fu_553_p1, tmp_7_cast_mid2_fu_558_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            Input_r_address0 <= tmp_7_cast_mid2_fu_558_p1(23 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
            Input_r_address0 <= sum_4_cast_mid2_fu_553_p1(23 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
            Input_r_address0 <= sum_cast_mid2_fu_533_p1(23 - 1 downto 0);
        elsif (((exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_8_fu_504_p2) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
            Input_r_address0 <= sum_2_cast_mid2_fu_486_p1(23 - 1 downto 0);
        elsif (((exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = tmp_8_fu_504_p2) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
            Input_r_address0 <= sum2_cast_fu_515_p1(23 - 1 downto 0);
        else 
            Input_r_address0 <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Input_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2, ap_block_pp0_stage1, sum_3_cast_mid2_fu_496_p1, tmp_cast_mid2_fu_520_p1, sum_1_cast_mid2_fu_543_p1, ap_block_pp0_stage3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                Input_r_address1 <= sum_1_cast_mid2_fu_543_p1(23 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                Input_r_address1 <= tmp_cast_mid2_fu_520_p1(23 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
                Input_r_address1 <= sum_3_cast_mid2_fu_496_p1(23 - 1 downto 0);
            else 
                Input_r_address1 <= "XXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            Input_r_address1 <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter0, tmp_8_fu_504_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = tmp_8_fu_504_p2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_8_fu_504_p2)))) then 
            Input_r_ce0 <= ap_const_logic_1;
        else 
            Input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Input_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)))) then 
            Input_r_ce1 <= ap_const_logic_1;
        else 
            Input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Output_r_address0 <= sum5_cast_fu_1000_p1(19 - 1 downto 0);

    Output_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            Output_r_ce0 <= ap_const_logic_1;
        else 
            Output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Output_r_d0 <= Sum_2_phi_fu_331_p4(15 downto 8);

    Output_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_reg_pp0_iter2_exitcond_flatten_reg_1055, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            Output_r_we0 <= ap_const_logic_1;
        else 
            Output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Sum_2_phi_fu_331_p4_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_reg_pp0_iter2_exitcond_flatten_reg_1055, ap_reg_pp0_iter2_tmp_8_reg_1100, Sum_6_6_reg_1250, ap_enable_reg_pp0_iter2, ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328, ap_block_pp0_stage2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter2_tmp_8_reg_1100) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
            Sum_2_phi_fu_331_p4 <= Sum_6_6_reg_1250;
        else 
            Sum_2_phi_fu_331_p4 <= ap_phi_precharge_reg_pp0_iter2_Sum_2_reg_328;
        end if; 
    end process;

    Sum_5_6_fu_913_p2 <= std_logic_vector(unsigned(tmp6_reg_1220) + unsigned(tmp8_fu_908_p2));
    Sum_6_6_fu_983_p2 <= std_logic_vector(unsigned(tmp1_fu_962_p2) + unsigned(tmp3_fu_978_p2));
    X_cast20_cast_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(X_mid2_reg_1064),20));
    X_cast5_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter1_X_mid2_reg_1064),32));
    X_cast_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter1_X_mid2_reg_1064),17));
    X_mid2_fu_412_p3 <= 
        ap_const_lv9_0 when (exitcond_fu_406_p2(0) = '1') else 
        X_phi_fu_321_p4;

    X_phi_fu_321_p4_assign_proc : process(X_reg_317, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1055, X_1_reg_1139, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            X_phi_fu_321_p4 <= X_1_reg_1139;
        else 
            X_phi_fu_321_p4 <= X_reg_317;
        end if; 
    end process;


    Y_phi_fu_310_p4_assign_proc : process(Y_reg_306, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1055, tmp_mid2_v_v_reg_1078, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            Y_phi_fu_310_p4 <= tmp_mid2_v_v_reg_1078;
        else 
            Y_phi_fu_310_p4 <= Y_reg_306;
        end if; 
    end process;

    Y_s_fu_420_p2 <= std_logic_vector(unsigned(Y_phi_fu_310_p4) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_912_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_912 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0));
    end process;


    ap_condition_917_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_917 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0));
    end process;


    ap_condition_921_assign_proc : process(ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
                ap_condition_921 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage2 = ap_const_boolean_0));
    end process;


    ap_condition_926_assign_proc : process(ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
                ap_condition_926 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0));
    end process;


    ap_condition_930_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_block_pp0_stage3)
    begin
                ap_condition_930 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage3 = ap_const_boolean_0));
    end process;


    ap_condition_934_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_block_pp0_stage3)
    begin
                ap_condition_934 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage3 = ap_const_boolean_0));
    end process;


    ap_condition_939_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
                ap_condition_939 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2));
    end process;


    ap_condition_944_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
                ap_condition_944 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2));
    end process;


    ap_condition_949_assign_proc : process(tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_949 <= ((ap_const_lv1_0 = tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0));
    end process;


    ap_condition_953_assign_proc : process(tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_953 <= ((tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0));
    end process;


    ap_condition_957_assign_proc : process(ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
                ap_condition_957 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage2 = ap_const_boolean_0));
    end process;


    ap_condition_961_assign_proc : process(ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
                ap_condition_961 <= ((ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0));
    end process;


    ap_condition_965_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_block_pp0_stage3)
    begin
                ap_condition_965 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage3 = ap_const_boolean_0));
    end process;


    ap_condition_969_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_block_pp0_stage3)
    begin
                ap_condition_969 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage3 = ap_const_boolean_0));
    end process;


    ap_condition_972_assign_proc : process(ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, ap_reg_pp0_iter1_tmp_8_reg_1100)
    begin
                ap_condition_972 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_394_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_flatten_fu_394_p2)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_precharge_reg_pp0_iter1_Sum_2_reg_328 <= "XXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buffer_address0_assign_proc : process(ap_reg_pp0_iter1_exitcond_flatten_reg_1055, tmp_22_3_cast_fu_567_p1, tmp_22_1_cast_fu_624_p1, tmp_22_5_cast_fu_691_p1, tmp_9_cast_fu_804_p1, ap_condition_912, ap_condition_917, ap_condition_921, ap_condition_926, ap_condition_930, ap_condition_934, ap_condition_939, ap_condition_944)
    begin
        if ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) then
            if ((ap_condition_944 = ap_const_boolean_1)) then 
                buffer_address0 <= ap_const_lv32_6(9 - 1 downto 0);
            elsif ((ap_condition_939 = ap_const_boolean_1)) then 
                buffer_address0 <= tmp_9_cast_fu_804_p1(9 - 1 downto 0);
            elsif ((ap_condition_934 = ap_const_boolean_1)) then 
                buffer_address0 <= ap_const_lv32_5(9 - 1 downto 0);
            elsif ((ap_condition_930 = ap_const_boolean_1)) then 
                buffer_address0 <= tmp_22_5_cast_fu_691_p1(9 - 1 downto 0);
            elsif ((ap_condition_926 = ap_const_boolean_1)) then 
                buffer_address0 <= ap_const_lv32_1(9 - 1 downto 0);
            elsif ((ap_condition_921 = ap_const_boolean_1)) then 
                buffer_address0 <= tmp_22_1_cast_fu_624_p1(9 - 1 downto 0);
            elsif ((ap_condition_917 = ap_const_boolean_1)) then 
                buffer_address0 <= ap_const_lv32_3(9 - 1 downto 0);
            elsif ((ap_condition_912 = ap_const_boolean_1)) then 
                buffer_address0 <= tmp_22_3_cast_fu_567_p1(9 - 1 downto 0);
            else 
                buffer_address0 <= "XXXXXXXXX";
            end if;
        else 
            buffer_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_address1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, tmp_22_4_cast_fu_577_p1, X_cast5_fu_620_p1, tmp_22_2_cast_fu_643_p1, ap_condition_949, ap_condition_953, ap_condition_957, ap_condition_961, ap_condition_965, ap_condition_969)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055))) then
            if ((ap_condition_969 = ap_const_boolean_1)) then 
                buffer_address1 <= ap_const_lv32_2(9 - 1 downto 0);
            elsif ((ap_condition_965 = ap_const_boolean_1)) then 
                buffer_address1 <= tmp_22_2_cast_fu_643_p1(9 - 1 downto 0);
            elsif ((ap_condition_961 = ap_const_boolean_1)) then 
                buffer_address1 <= ap_const_lv32_0(9 - 1 downto 0);
            elsif ((ap_condition_957 = ap_const_boolean_1)) then 
                buffer_address1 <= X_cast5_fu_620_p1(9 - 1 downto 0);
            elsif ((ap_condition_953 = ap_const_boolean_1)) then 
                buffer_address1 <= ap_const_lv32_4(9 - 1 downto 0);
            elsif ((ap_condition_949 = ap_const_boolean_1)) then 
                buffer_address1 <= tmp_22_4_cast_fu_577_p1(9 - 1 downto 0);
            else 
                buffer_address1 <= "XXXXXXXXX";
            end if;
        else 
            buffer_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            buffer_ce0 <= ap_const_logic_1;
        else 
            buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_ce1_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)))) then 
            buffer_ce1 <= ap_const_logic_1;
        else 
            buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_d0_assign_proc : process(reg_342, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_8_reg_1100, reg_347, ap_CS_fsm_pp0_stage1, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, Input_load_9_reg_1159, Input_load_13_reg_1188, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            buffer_d0 <= reg_347;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
            buffer_d0 <= Input_load_13_reg_1188;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
            buffer_d0 <= Input_load_9_reg_1159;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_block_pp0_stage1 = ap_const_boolean_0)))) then 
            buffer_d0 <= reg_342;
        else 
            buffer_d0 <= "XXXXXXXX";
        end if; 
    end process;


    buffer_d1_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_8_reg_1100, reg_347, ap_CS_fsm_pp0_stage1, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, Input_load_10_reg_1181, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
            buffer_d1 <= Input_load_10_reg_1181;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_block_pp0_stage1 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0)))) then 
            buffer_d1 <= reg_347;
        else 
            buffer_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buffer_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            buffer_we0 <= ap_const_logic_1;
        else 
            buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_we1_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_8_reg_1100, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_reg_pp0_iter1_exitcond_flatten_reg_1055, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_reg_pp0_iter1_tmp_8_reg_1100, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_8_reg_1100 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1055) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_1100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)))) then 
            buffer_we1 <= ap_const_logic_1;
        else 
            buffer_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_394_p2 <= "1" when (indvar_flatten_phi_fu_299_p4 = ap_const_lv17_1F3EC) else "0";
    exitcond_fu_406_p2 <= "1" when (X_phi_fu_321_p4 = ap_const_lv9_1DA) else "0";
    grp_fu_1004_p0 <= grp_fu_1004_p00(8 - 1 downto 0);
    grp_fu_1004_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_342),16));
    grp_fu_1004_p1 <= ap_const_lv16_62(8 - 1 downto 0);
    grp_fu_1012_p0 <= grp_fu_1012_p00(8 - 1 downto 0);
    grp_fu_1012_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_354),16));
    grp_fu_1012_p1 <= ap_const_lv16_62(8 - 1 downto 0);

    grp_fu_337_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, X_mid2_reg_1064, ap_reg_pp0_iter1_X_mid2_reg_1064, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
            grp_fu_337_p0 <= ap_reg_pp0_iter1_X_mid2_reg_1064;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
            grp_fu_337_p0 <= X_mid2_reg_1064;
        else 
            grp_fu_337_p0 <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_337_p2 <= std_logic_vector(unsigned(grp_fu_337_p0) + unsigned(ap_const_lv9_1));
    indvar_flatten_next_fu_400_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_299_p4) + unsigned(ap_const_lv17_1));

    indvar_flatten_phi_fu_299_p4_assign_proc : process(indvar_flatten_reg_295, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1055, indvar_flatten_next_reg_1059, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_1055 = ap_const_lv1_0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            indvar_flatten_phi_fu_299_p4 <= indvar_flatten_next_reg_1059;
        else 
            indvar_flatten_phi_fu_299_p4 <= indvar_flatten_reg_295;
        end if; 
    end process;

    p_shl12_cast_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl12_fu_711_p3),13));
    p_shl12_fu_711_p3 <= (Input_load_9_reg_1159 & ap_const_lv4_0);
    p_shl13_cast_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_fu_732_p3),15));
    p_shl13_fu_732_p3 <= (Input_load_10_reg_1181 & ap_const_lv6_0);
    p_shl14_cast_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl14_fu_743_p3),15));
    p_shl14_fu_743_p3 <= (Input_load_10_reg_1181 & ap_const_lv1_0);
    p_shl15_cast_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl15_fu_586_p3),15));
    p_shl15_fu_586_p3 <= (reg_347 & ap_const_lv6_0);
    p_shl16_cast_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl16_fu_598_p3),15));
    p_shl16_fu_598_p3 <= (reg_347 & ap_const_lv1_0);
    p_shl17_cast_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl17_fu_767_p3),13));
    p_shl17_fu_767_p3 <= (Input_load_13_reg_1188 & ap_const_lv4_0);
    p_shl18_cast_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl18_fu_813_p3),13));
    p_shl18_fu_813_p3 <= (reg_359 & ap_const_lv4_0);
    p_shl19_cast_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl19_fu_831_p3),15));
    p_shl19_fu_831_p3 <= (buffer_q1 & ap_const_lv6_0);
    p_shl20_cast_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl20_fu_843_p3),15));
    p_shl20_fu_843_p3 <= (buffer_q1 & ap_const_lv1_0);
    p_shl21_cast_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl21_fu_652_p3),15));
    p_shl21_fu_652_p3 <= (reg_359 & ap_const_lv6_0);
    p_shl22_cast_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl22_fu_664_p3),15));
    p_shl22_fu_664_p3 <= (reg_359 & ap_const_lv1_0);
    p_shl23_cast_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl23_fu_865_p3),13));
    p_shl23_fu_865_p3 <= (buffer_q0 & ap_const_lv4_0);
    p_shl8_cast_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl8_fu_376_p3),19));
    p_shl8_cast_mid1_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl8_mid1_fu_446_p3),19));
    p_shl8_fu_376_p3 <= (Y_phi_fu_310_p4 & ap_const_lv5_0);
    p_shl8_mid1_fu_446_p3 <= (Y_s_fu_420_p2 & ap_const_lv5_0);
    p_shl_cast_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_364_p3),19));
    p_shl_cast_mid1_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_434_p3),19));
    p_shl_fu_364_p3 <= (Y_phi_fu_310_p4 & ap_const_lv9_0);
    p_shl_mid1_fu_434_p3 <= (Y_s_fu_420_p2 & ap_const_lv9_0);
        sum2_cast_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum2_fu_509_p2),32));

    sum2_fu_509_p2 <= std_logic_vector(unsigned(X_cast20_cast_fu_501_p1) + unsigned(tmp_7_cast22_cast_mi_1_fu_477_p1));
    sum5_cast_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum5_reg_1245),32));
    sum5_fu_918_p2 <= std_logic_vector(unsigned(X_cast_fu_796_p1) + unsigned(tmp_mid2_reg_1195));
        sum_1_cast_mid2_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_1_cast_mid2_v_fu_538_p2),32));

    sum_1_cast_mid2_v_fu_538_p2 <= (tmp_cast_mid2_v_reg_1084 or ap_const_lv19_2);
        sum_2_cast_mid2_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_2_cast_mid2_v_fu_481_p2),32));

    sum_2_cast_mid2_v_fu_481_p2 <= (tmp_cast_mid2_v_reg_1084 or ap_const_lv19_3);
        sum_3_cast_mid2_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_3_cast_mid2_v_fu_491_p2),32));

    sum_3_cast_mid2_v_fu_491_p2 <= (tmp_cast_mid2_v_reg_1084 or ap_const_lv19_4);
        sum_4_cast_mid2_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_4_cast_mid2_v_fu_548_p2),32));

    sum_4_cast_mid2_v_fu_548_p2 <= (tmp_cast_mid2_v_reg_1084 or ap_const_lv19_5);
    sum_cast_mid2_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_cast_mid2_v_fu_527_p2),32));
    sum_cast_mid2_v_fu_527_p2 <= (sum_cast_mid2_v_v_fu_524_p1 or ap_const_lv24_1);
        sum_cast_mid2_v_v_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_cast_mid2_v_reg_1084),24));

        tmp10_cast_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp10_fu_898_p2),16));

    tmp10_fu_898_p2 <= std_logic_vector(unsigned(tmp_21_6_cast_fu_894_p1) + unsigned(tmp_21_5_cast_fu_883_p1));
    tmp1_fu_962_p2 <= std_logic_vector(unsigned(tmp_15_cast_fu_931_p1) + unsigned(tmp2_fu_956_p2));
    tmp2_fu_956_p2 <= std_logic_vector(signed(tmp_24_2_cast_fu_938_p1) + signed(tmp_24_1_cast_fu_935_p1));
    tmp3_fu_978_p2 <= std_logic_vector(signed(tmp4_reg_1210) + signed(tmp5_cast_fu_974_p1));
        tmp5_cast_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_fu_968_p2),16));

    tmp5_fu_968_p2 <= std_logic_vector(unsigned(tmp_24_6_cast_fu_952_p1) + unsigned(tmp_24_5_cast_fu_941_p1));
    tmp6_fu_790_p2 <= std_logic_vector(unsigned(tmp_13_cast_fu_704_p1) + unsigned(tmp7_fu_784_p2));
    tmp7_fu_784_p2 <= std_logic_vector(signed(tmp_21_2_cast_fu_760_p1) + signed(tmp_21_1_cast_fu_728_p1));
    tmp8_fu_908_p2 <= std_logic_vector(signed(tmp9_reg_1166) + signed(tmp10_cast_fu_904_p1));
    tmp_13_cast_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_696_p3),16));
    tmp_15_cast_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_923_p3),16));
    tmp_20_1_cast1_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Input_load_9_reg_1159),13));
    tmp_20_5_cast1_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Input_load_13_reg_1188),13));
        tmp_21_1_cast_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_1_fu_722_p2),16));

    tmp_21_1_fu_722_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_718_p1) - unsigned(tmp_20_1_cast1_fu_708_p1));
        tmp_21_2_cast_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_2_fu_754_p2),16));

    tmp_21_2_fu_754_p2 <= std_logic_vector(unsigned(p_shl13_cast_fu_739_p1) - unsigned(p_shl14_cast_fu_750_p1));
    tmp_21_4_fu_610_p2 <= std_logic_vector(unsigned(p_shl15_cast_fu_594_p1) - unsigned(p_shl16_cast_fu_606_p1));
        tmp_21_5_cast_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_5_reg_1215),14));

    tmp_21_5_fu_778_p2 <= std_logic_vector(unsigned(p_shl17_cast_fu_774_p1) - unsigned(tmp_20_5_cast1_fu_764_p1));
    tmp_21_6_cast_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_6_fu_886_p3),14));
    tmp_21_6_fu_886_p3 <= (reg_347 & ap_const_lv1_0);
    tmp_22_1_cast_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_337_p2),32));
    tmp_22_2_cast_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_2_fu_638_p2),32));
    tmp_22_2_fu_638_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter1_X_mid2_reg_1064) + unsigned(ap_const_lv9_2));
    tmp_22_3_cast_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_3_fu_562_p2),32));
    tmp_22_3_fu_562_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter1_X_mid2_reg_1064) + unsigned(ap_const_lv9_3));
    tmp_22_4_cast_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_4_fu_572_p2),32));
    tmp_22_4_fu_572_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter1_X_mid2_reg_1064) + unsigned(ap_const_lv9_4));
    tmp_22_5_cast_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_5_fu_686_p2),32));
    tmp_22_5_fu_686_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter1_X_mid2_reg_1064) + unsigned(ap_const_lv9_5));
    tmp_23_1_cast1_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_359),13));
    tmp_23_5_cast1_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_q0),13));
        tmp_24_1_cast_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_1_reg_1225),16));

    tmp_24_1_fu_825_p2 <= std_logic_vector(unsigned(p_shl18_cast_fu_821_p1) - unsigned(tmp_23_1_cast1_fu_809_p1));
        tmp_24_2_cast_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_2_reg_1230),16));

    tmp_24_2_fu_855_p2 <= std_logic_vector(unsigned(p_shl19_cast_fu_839_p1) - unsigned(p_shl20_cast_fu_851_p1));
    tmp_24_4_fu_676_p2 <= std_logic_vector(unsigned(p_shl21_cast_fu_660_p1) - unsigned(p_shl22_cast_fu_672_p1));
        tmp_24_5_cast_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_5_reg_1235),14));

    tmp_24_5_fu_877_p2 <= std_logic_vector(unsigned(p_shl23_cast_fu_873_p1) - unsigned(tmp_23_5_cast1_fu_861_p1));
    tmp_24_6_cast_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_6_fu_944_p3),14));
    tmp_24_6_fu_944_p3 <= (ap_reg_pp0_iter2_reg_342 & ap_const_lv1_0);
    tmp_2_fu_696_p3 <= (reg_347 & ap_const_lv1_0);
    tmp_3_fu_923_p3 <= (reg_354 & ap_const_lv1_0);
        tmp_7_cast22_cast_mi_1_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_cast22_cast_mi_fu_472_p2),20));

    tmp_7_cast22_cast_mi_fu_472_p2 <= (tmp_cast_mid2_v_reg_1084 or ap_const_lv19_6);
        tmp_7_cast_mid2_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_cast22_cast_mi_reg_1095),32));

    tmp_8_fu_504_p2 <= "1" when (X_mid2_reg_1064 = ap_const_lv9_0) else "0";
    tmp_9_cast_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_799_p2),32));
    tmp_9_fu_799_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter1_X_mid2_reg_1064) + unsigned(ap_const_lv9_6));
        tmp_cast_mid2_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_cast_mid2_v_reg_1084),32));

    tmp_cast_mid2_v_fu_464_p3 <= 
        tmp_mid1_fu_458_p2 when (exitcond_fu_406_p2(0) = '1') else 
        tmp_s_fu_388_p2;
    tmp_mid1_fu_458_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_442_p1) - unsigned(p_shl8_cast_mid1_fu_454_p1));
    tmp_mid2_fu_632_p0 <= tmp_mid2_fu_632_p00(9 - 1 downto 0);
    tmp_mid2_fu_632_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter1_tmp_mid2_v_v_reg_1078),17));
    tmp_mid2_fu_632_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_fu_632_p0) * unsigned(ap_const_lv17_1DA), 17));
    tmp_mid2_v_v_fu_426_p3 <= 
        Y_s_fu_420_p2 when (exitcond_fu_406_p2(0) = '1') else 
        Y_phi_fu_310_p4;
    tmp_s_fu_388_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_372_p1) - unsigned(p_shl8_cast_fu_384_p1));
end behav;
