// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Filter_HW_HH_
#define _Filter_HW_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Filter_horizontal_HW.h"
#include "Filter_vertical.h"
#include "Filter_HW_Temp.h"

namespace ap_rtl {

struct Filter_HW : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<23> > Input_r_address0;
    sc_out< sc_logic > Input_r_ce0;
    sc_in< sc_lv<8> > Input_r_q0;
    sc_out< sc_lv<23> > Input_r_address1;
    sc_out< sc_logic > Input_r_ce1;
    sc_in< sc_lv<8> > Input_r_q1;
    sc_out< sc_lv<23> > Output_r_address0;
    sc_out< sc_logic > Output_r_ce0;
    sc_out< sc_logic > Output_r_we0;
    sc_out< sc_lv<8> > Output_r_d0;


    // Module declarations
    Filter_HW(sc_module_name name);
    SC_HAS_PROCESS(Filter_HW);

    ~Filter_HW();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Filter_HW_Temp* Temp_U;
    Filter_horizontal_HW* grp_Filter_horizontal_HW_fu_20;
    Filter_vertical* grp_Filter_vertical_fu_28;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<19> > Temp_address0;
    sc_signal< sc_logic > Temp_ce0;
    sc_signal< sc_logic > Temp_we0;
    sc_signal< sc_lv<8> > Temp_q0;
    sc_signal< sc_logic > Temp_ce1;
    sc_signal< sc_lv<8> > Temp_q1;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_ap_start;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_ap_done;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_ap_idle;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_ap_ready;
    sc_signal< sc_lv<23> > grp_Filter_horizontal_HW_fu_20_Input_r_address0;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_Input_r_ce0;
    sc_signal< sc_lv<23> > grp_Filter_horizontal_HW_fu_20_Input_r_address1;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_Input_r_ce1;
    sc_signal< sc_lv<19> > grp_Filter_horizontal_HW_fu_20_Output_r_address0;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_Output_r_ce0;
    sc_signal< sc_logic > grp_Filter_horizontal_HW_fu_20_Output_r_we0;
    sc_signal< sc_lv<8> > grp_Filter_horizontal_HW_fu_20_Output_r_d0;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_ap_start;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_ap_done;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_ap_idle;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_ap_ready;
    sc_signal< sc_lv<19> > grp_Filter_vertical_fu_28_Input_r_address0;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_Input_r_ce0;
    sc_signal< sc_lv<19> > grp_Filter_vertical_fu_28_Input_r_address1;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_Input_r_ce1;
    sc_signal< sc_lv<23> > grp_Filter_vertical_fu_28_Output_r_address0;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_Output_r_ce0;
    sc_signal< sc_logic > grp_Filter_vertical_fu_28_Output_r_we0;
    sc_signal< sc_lv<8> > grp_Filter_vertical_fu_28_Output_r_d0;
    sc_signal< sc_logic > ap_reg_grp_Filter_horizontal_HW_fu_20_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_reg_grp_Filter_vertical_fu_28_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Input_r_address0();
    void thread_Input_r_address1();
    void thread_Input_r_ce0();
    void thread_Input_r_ce1();
    void thread_Output_r_address0();
    void thread_Output_r_ce0();
    void thread_Output_r_d0();
    void thread_Output_r_we0();
    void thread_Temp_address0();
    void thread_Temp_ce0();
    void thread_Temp_ce1();
    void thread_Temp_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_Filter_horizontal_HW_fu_20_ap_start();
    void thread_grp_Filter_vertical_fu_28_ap_start();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
